package dtime

// Code generated by peg -noast -switch -inline -strict -output grammar.go grammar.peg DO NOT EDIT.

import (
	"fmt"
	"sort"
	"strconv"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleDTime
	ruleWeekday
	ruleMonth
	ruleDay
	ruleTime
	ruleHour
	ruleHour12
	ruleAmPm
	ruleMinute
	ruleYear
	ruleOffset
	ruleOffDir
	ruleOffYear
	ruleOffWeek
	ruleOffDay
	ruleOffHour
	ruleOffMinute
	ruleOffSecond
	ruleFLOAT
	ruleEND
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	rulePegText
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
	ruleAction71
	ruleAction72
	ruleAction73
)

var rul3s = [...]string{
	"Unknown",
	"DTime",
	"Weekday",
	"Month",
	"Day",
	"Time",
	"Hour",
	"Hour12",
	"AmPm",
	"Minute",
	"Year",
	"Offset",
	"OffDir",
	"OffYear",
	"OffWeek",
	"OffDay",
	"OffHour",
	"OffMinute",
	"OffSecond",
	"FLOAT",
	"END",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"PegText",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
	"Action71",
	"Action72",
	"Action73",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type spanParser struct {
	start time.Time
	stop  time.Time

	offset float64
	offdir float64

	year  int
	month int
	day   int
	wday  int
	hour  int
	min   int

	_float float64
	_int   int
	_e     error

	Buffer string
	buffer []rune
	rules  [96]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
}

func (p *spanParser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *spanParser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *spanParser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func Pretty(pretty bool) func(*spanParser) error {
	return func(p *spanParser) error {
		p.Pretty = pretty
		return nil
	}
}

func (p *spanParser) Init(options ...func(*spanParser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
		text                 string
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		if matches {
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 DTime <- <((Weekday Offset? END Action1) / (Month Offset? END Action2) / (Time Offset? END Action3) / (Time ',' Weekday Offset? END Action4) / (Time ',' Weekday ',' Year Offset? END Action5) / (Time ',' Month Offset? END Action6) / (Time ',' Month ',' Year Offset? END Action7) / (Time ',' Year Offset? END Action8) / (Weekday ',' Year Offset? END Action9) / (Month Day Offset? END Action10) / (Time ',' Month Day Offset? END Action11) / (Month ',' Year Offset? END Action13) / ('.' END Action16) / ('.' 'm' Offset? END Action17) / ('.' 'd' Offset END Action18) / ('.' 'd' END Action19) / ('t' Offset END Action20) / ('t' END Action21) / ('y' ('e' 's' 't' ('e' 'r' 'd' 'a' 'y')?)? Offset END Action23) / ('.' ('s' ('e' 'c' ('o' 'n' 'd')?)?)? Offset END Action25) / ('.' ('s' ('e' 'c' ('o' 'n' 'd')?)?)? END Action26) / ('.' ('m' ('i' 'n' ('u' 't' 'e')?)?)? Offset END Action27) / ('.' ('m' ('i' 'n' ('u' 't' 'e')?)?)? END Action28) / ('.' 'h' ('r' / ('o' 'u' 'r'))? Offset END Action29) / ('.' 'h' ('r' / ('o' 'u' 'r'))? END Action30) / ('.' 'w' ('k' / ('e' 'e' 'k'))? Offset END Action31) / ('.' 'w' ('k' / ('e' 'e' 'k'))? END Action32) / ((('.' 'M') / ('.' 'm' 'o' 'n' 't' 'h')) Offset END Action33) / ((('.' 'M') / ('.' 'm' 'o' 'n' 't' 'h')) END Action34) / ((('.' 'y' 'e' 'a' 'r') / ('.' 'y' 'r') / ('.' 'y')) Offset END Action35) / ((&('.') ((('.' 'y' 'e' 'a' 'r') / ('.' 'y' 'r') / ('.' 'y')) END Action36)) | (&('y') ('y' ('e' 's' 't' ('e' 'r' 'd' 'a' 'y')?)? END Action24)) | (&('t') ((('t' 'o' 'm' ('o' 'r' 'r' 'o' 'w')?) / 't') END Action22)) | (&(',') (',' Year Offset? END Action12)) | (&('+' | '-') (Offset Action0)) | (&('a' | 'd' | 'f' | 'j' | 'm' | 'n' | 'o' | 's') (Month Day ',' Year Offset? END Action14)) | (&('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') (Time ',' Month Day ',' Year Offset? END Action15))))> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[ruleWeekday]() {
						goto l3
					}
					{
						position4, tokenIndex4 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l4
						}
						goto l5
					l4:
						position, tokenIndex = position4, tokenIndex4
					}
				l5:
					if !_rules[ruleEND]() {
						goto l3
					}
					{

						p.start = *_deftime()
						mon := MondayOf(&p.start)
						p.start = mon.Add(time.Duration(p.wday) * time.Hour * 24)

					}
					goto l2
				l3:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l7
					}
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l8
						}
						goto l9
					l8:
						position, tokenIndex = position8, tokenIndex8
					}
				l9:
					if !_rules[ruleEND]() {
						goto l7
					}
					{

						t := _deftime()
						m := time.Month(p.month)
						p.start = time.Date(t.Year(), m, 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l7:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l11
					}
					{
						position12, tokenIndex12 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l12
						}
						goto l13
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
				l13:
					if !_rules[ruleEND]() {
						goto l11
					}
					{

						t := *Today()
						p.start = time.Date(t.Year(), t.Month(), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l11:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l15
					}
					if buffer[position] != rune(',') {
						goto l15
					}
					position++
					if !_rules[ruleWeekday]() {
						goto l15
					}
					{
						position16, tokenIndex16 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l16
						}
						goto l17
					l16:
						position, tokenIndex = position16, tokenIndex16
					}
				l17:
					if !_rules[ruleEND]() {
						goto l15
					}
					{

						t := MondayOf(Today())
						day := t.Day() + p.wday
						p.start = time.Date(t.Year(), t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l15:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l19
					}
					if buffer[position] != rune(',') {
						goto l19
					}
					position++
					if !_rules[ruleWeekday]() {
						goto l19
					}
					if buffer[position] != rune(',') {
						goto l19
					}
					position++
					if !_rules[ruleYear]() {
						goto l19
					}
					{
						position20, tokenIndex20 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l20
						}
						goto l21
					l20:
						position, tokenIndex = position20, tokenIndex20
					}
				l21:
					if !_rules[ruleEND]() {
						goto l19
					}
					{

						t := MondayOf(Today())
						day := t.Day() + p.wday
						p.start = time.Date(p.year, t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l19:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l23
					}
					if buffer[position] != rune(',') {
						goto l23
					}
					position++
					if !_rules[ruleMonth]() {
						goto l23
					}
					{
						position24, tokenIndex24 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l24
						}
						goto l25
					l24:
						position, tokenIndex = position24, tokenIndex24
					}
				l25:
					if !_rules[ruleEND]() {
						goto l23
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l23:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l27
					}
					if buffer[position] != rune(',') {
						goto l27
					}
					position++
					if !_rules[ruleMonth]() {
						goto l27
					}
					if buffer[position] != rune(',') {
						goto l27
					}
					position++
					if !_rules[ruleYear]() {
						goto l27
					}
					{
						position28, tokenIndex28 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l28
						}
						goto l29
					l28:
						position, tokenIndex = position28, tokenIndex28
					}
				l29:
					if !_rules[ruleEND]() {
						goto l27
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l27:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l31
					}
					if buffer[position] != rune(',') {
						goto l31
					}
					position++
					if !_rules[ruleYear]() {
						goto l31
					}
					{
						position32, tokenIndex32 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l32
						}
						goto l33
					l32:
						position, tokenIndex = position32, tokenIndex32
					}
				l33:
					if !_rules[ruleEND]() {
						goto l31
					}
					{

						t := _deftime()
						p.start = time.Date(p.year, t.Month(), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l31:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleWeekday]() {
						goto l35
					}
					if buffer[position] != rune(',') {
						goto l35
					}
					position++
					if !_rules[ruleYear]() {
						goto l35
					}
					{
						position36, tokenIndex36 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l36
						}
						goto l37
					l36:
						position, tokenIndex = position36, tokenIndex36
					}
				l37:
					if !_rules[ruleEND]() {
						goto l35
					}
					{

						t := _deftime()
						day := MondayOf(t).Day() + p.wday
						p.start = time.Date(p.year, t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l35:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l39
					}
					if !_rules[ruleDay]() {
						goto l39
					}
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l40
						}
						goto l41
					l40:
						position, tokenIndex = position40, tokenIndex40
					}
				l41:
					if !_rules[ruleEND]() {
						goto l39
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), p.day, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l39:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l43
					}
					if buffer[position] != rune(',') {
						goto l43
					}
					position++
					if !_rules[ruleMonth]() {
						goto l43
					}
					if !_rules[ruleDay]() {
						goto l43
					}
					{
						position44, tokenIndex44 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l44
						}
						goto l45
					l44:
						position, tokenIndex = position44, tokenIndex44
					}
				l45:
					if !_rules[ruleEND]() {
						goto l43
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), p.day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l43:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l47
					}
					if buffer[position] != rune(',') {
						goto l47
					}
					position++
					if !_rules[ruleYear]() {
						goto l47
					}
					{
						position48, tokenIndex48 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l48
						}
						goto l49
					l48:
						position, tokenIndex = position48, tokenIndex48
					}
				l49:
					if !_rules[ruleEND]() {
						goto l47
					}
					{

						t := _deftime()
						p.start = time.Date(p.year, time.Month(p.month), 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l47:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l51
					}
					position++
					if !_rules[ruleEND]() {
						goto l51
					}
					{
						t := *_deftime()
						p.start, p.stop = t, t
					}
					goto l2
				l51:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l53
					}
					position++
					if buffer[position] != rune('m') {
						goto l53
					}
					position++
					{
						position54, tokenIndex54 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l54
						}
						goto l55
					l54:
						position, tokenIndex = position54, tokenIndex54
					}
				l55:
					if !_rules[ruleEND]() {
						goto l53
					}
					{
						p.start = *_deftime()
					}
					goto l2
				l53:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l57
					}
					position++
					if buffer[position] != rune('d') {
						goto l57
					}
					position++
					if !_rules[ruleOffset]() {
						goto l57
					}
					if !_rules[ruleEND]() {
						goto l57
					}
					{
						p.start = *Today()
					}
					goto l2
				l57:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l59
					}
					position++
					if buffer[position] != rune('d') {
						goto l59
					}
					position++
					if !_rules[ruleEND]() {
						goto l59
					}
					{
						p.start = *Today()
						p.offset = DAY
					}
					goto l2
				l59:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('t') {
						goto l61
					}
					position++
					if !_rules[ruleOffset]() {
						goto l61
					}
					if !_rules[ruleEND]() {
						goto l61
					}
					{
						p.start = *Tomorrow()
					}
					goto l2
				l61:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('t') {
						goto l63
					}
					position++
					if !_rules[ruleEND]() {
						goto l63
					}
					{
						p.start = *Tomorrow()
					}
					goto l2
				l63:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('y') {
						goto l65
					}
					position++
					{
						position66, tokenIndex66 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l66
						}
						position++
						if buffer[position] != rune('s') {
							goto l66
						}
						position++
						if buffer[position] != rune('t') {
							goto l66
						}
						position++
						{
							position68, tokenIndex68 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l68
							}
							position++
							if buffer[position] != rune('r') {
								goto l68
							}
							position++
							if buffer[position] != rune('d') {
								goto l68
							}
							position++
							if buffer[position] != rune('a') {
								goto l68
							}
							position++
							if buffer[position] != rune('y') {
								goto l68
							}
							position++
							goto l69
						l68:
							position, tokenIndex = position68, tokenIndex68
						}
					l69:
						goto l67
					l66:
						position, tokenIndex = position66, tokenIndex66
					}
				l67:
					if !_rules[ruleOffset]() {
						goto l65
					}
					if !_rules[ruleEND]() {
						goto l65
					}
					{

						p.start = *Yesterday()

					}
					goto l2
				l65:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l71
					}
					position++
					{
						position72, tokenIndex72 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l72
						}
						position++
						{
							position74, tokenIndex74 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l74
							}
							position++
							if buffer[position] != rune('c') {
								goto l74
							}
							position++
							{
								position76, tokenIndex76 := position, tokenIndex
								if buffer[position] != rune('o') {
									goto l76
								}
								position++
								if buffer[position] != rune('n') {
									goto l76
								}
								position++
								if buffer[position] != rune('d') {
									goto l76
								}
								position++
								goto l77
							l76:
								position, tokenIndex = position76, tokenIndex76
							}
						l77:
							goto l75
						l74:
							position, tokenIndex = position74, tokenIndex74
						}
					l75:
						goto l73
					l72:
						position, tokenIndex = position72, tokenIndex72
					}
				l73:
					if !_rules[ruleOffset]() {
						goto l71
					}
					if !_rules[ruleEND]() {
						goto l71
					}
					{

						p.start = *_deftime()

					}
					goto l2
				l71:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l79
					}
					position++
					{
						position80, tokenIndex80 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l80
						}
						position++
						{
							position82, tokenIndex82 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l82
							}
							position++
							if buffer[position] != rune('c') {
								goto l82
							}
							position++
							{
								position84, tokenIndex84 := position, tokenIndex
								if buffer[position] != rune('o') {
									goto l84
								}
								position++
								if buffer[position] != rune('n') {
									goto l84
								}
								position++
								if buffer[position] != rune('d') {
									goto l84
								}
								position++
								goto l85
							l84:
								position, tokenIndex = position84, tokenIndex84
							}
						l85:
							goto l83
						l82:
							position, tokenIndex = position82, tokenIndex82
						}
					l83:
						goto l81
					l80:
						position, tokenIndex = position80, tokenIndex80
					}
				l81:
					if !_rules[ruleEND]() {
						goto l79
					}
					{

						p.start = *_deftime()
						p.stop = p.start

					}
					goto l2
				l79:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l87
					}
					position++
					{
						position88, tokenIndex88 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l88
						}
						position++
						{
							position90, tokenIndex90 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l90
							}
							position++
							if buffer[position] != rune('n') {
								goto l90
							}
							position++
							{
								position92, tokenIndex92 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l92
								}
								position++
								if buffer[position] != rune('t') {
									goto l92
								}
								position++
								if buffer[position] != rune('e') {
									goto l92
								}
								position++
								goto l93
							l92:
								position, tokenIndex = position92, tokenIndex92
							}
						l93:
							goto l91
						l90:
							position, tokenIndex = position90, tokenIndex90
						}
					l91:
						goto l89
					l88:
						position, tokenIndex = position88, tokenIndex88
					}
				l89:
					if !_rules[ruleOffset]() {
						goto l87
					}
					if !_rules[ruleEND]() {
						goto l87
					}
					{

						p.start = *MinuteOf(_deftime())

					}
					goto l2
				l87:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l95
					}
					position++
					{
						position96, tokenIndex96 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l96
						}
						position++
						{
							position98, tokenIndex98 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l98
							}
							position++
							if buffer[position] != rune('n') {
								goto l98
							}
							position++
							{
								position100, tokenIndex100 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l100
								}
								position++
								if buffer[position] != rune('t') {
									goto l100
								}
								position++
								if buffer[position] != rune('e') {
									goto l100
								}
								position++
								goto l101
							l100:
								position, tokenIndex = position100, tokenIndex100
							}
						l101:
							goto l99
						l98:
							position, tokenIndex = position98, tokenIndex98
						}
					l99:
						goto l97
					l96:
						position, tokenIndex = position96, tokenIndex96
					}
				l97:
					if !_rules[ruleEND]() {
						goto l95
					}
					{

						p.start = *MinuteOf(_deftime())
						p.offset = MINUTE

					}
					goto l2
				l95:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l103
					}
					position++
					if buffer[position] != rune('h') {
						goto l103
					}
					position++
					{
						position104, tokenIndex104 := position, tokenIndex
						{
							position106, tokenIndex106 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l107
							}
							position++
							goto l106
						l107:
							position, tokenIndex = position106, tokenIndex106
							if buffer[position] != rune('o') {
								goto l104
							}
							position++
							if buffer[position] != rune('u') {
								goto l104
							}
							position++
							if buffer[position] != rune('r') {
								goto l104
							}
							position++
						}
					l106:
						goto l105
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
				l105:
					if !_rules[ruleOffset]() {
						goto l103
					}
					if !_rules[ruleEND]() {
						goto l103
					}
					{

						p.start = *HourOf(_deftime())

					}
					goto l2
				l103:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l109
					}
					position++
					if buffer[position] != rune('h') {
						goto l109
					}
					position++
					{
						position110, tokenIndex110 := position, tokenIndex
						{
							position112, tokenIndex112 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l113
							}
							position++
							goto l112
						l113:
							position, tokenIndex = position112, tokenIndex112
							if buffer[position] != rune('o') {
								goto l110
							}
							position++
							if buffer[position] != rune('u') {
								goto l110
							}
							position++
							if buffer[position] != rune('r') {
								goto l110
							}
							position++
						}
					l112:
						goto l111
					l110:
						position, tokenIndex = position110, tokenIndex110
					}
				l111:
					if !_rules[ruleEND]() {
						goto l109
					}
					{

						p.start = *HourOf(_deftime())
						p.offset = HOUR

					}
					goto l2
				l109:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l115
					}
					position++
					if buffer[position] != rune('w') {
						goto l115
					}
					position++
					{
						position116, tokenIndex116 := position, tokenIndex
						{
							position118, tokenIndex118 := position, tokenIndex
							if buffer[position] != rune('k') {
								goto l119
							}
							position++
							goto l118
						l119:
							position, tokenIndex = position118, tokenIndex118
							if buffer[position] != rune('e') {
								goto l116
							}
							position++
							if buffer[position] != rune('e') {
								goto l116
							}
							position++
							if buffer[position] != rune('k') {
								goto l116
							}
							position++
						}
					l118:
						goto l117
					l116:
						position, tokenIndex = position116, tokenIndex116
					}
				l117:
					if !_rules[ruleOffset]() {
						goto l115
					}
					if !_rules[ruleEND]() {
						goto l115
					}
					{

						p.start = *WeekOf(_deftime())

					}
					goto l2
				l115:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l121
					}
					position++
					if buffer[position] != rune('w') {
						goto l121
					}
					position++
					{
						position122, tokenIndex122 := position, tokenIndex
						{
							position124, tokenIndex124 := position, tokenIndex
							if buffer[position] != rune('k') {
								goto l125
							}
							position++
							goto l124
						l125:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('e') {
								goto l122
							}
							position++
							if buffer[position] != rune('e') {
								goto l122
							}
							position++
							if buffer[position] != rune('k') {
								goto l122
							}
							position++
						}
					l124:
						goto l123
					l122:
						position, tokenIndex = position122, tokenIndex122
					}
				l123:
					if !_rules[ruleEND]() {
						goto l121
					}
					{

						p.start = *WeekOf(_deftime())
						p.offset = WEEK

					}
					goto l2
				l121:
					position, tokenIndex = position2, tokenIndex2
					{
						position128, tokenIndex128 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l129
						}
						position++
						if buffer[position] != rune('M') {
							goto l129
						}
						position++
						goto l128
					l129:
						position, tokenIndex = position128, tokenIndex128
						if buffer[position] != rune('.') {
							goto l127
						}
						position++
						if buffer[position] != rune('m') {
							goto l127
						}
						position++
						if buffer[position] != rune('o') {
							goto l127
						}
						position++
						if buffer[position] != rune('n') {
							goto l127
						}
						position++
						if buffer[position] != rune('t') {
							goto l127
						}
						position++
						if buffer[position] != rune('h') {
							goto l127
						}
						position++
					}
				l128:
					if !_rules[ruleOffset]() {
						goto l127
					}
					if !_rules[ruleEND]() {
						goto l127
					}
					{

						p.start = *MonthOf(_deftime())

					}
					goto l2
				l127:
					position, tokenIndex = position2, tokenIndex2
					{
						position132, tokenIndex132 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l133
						}
						position++
						if buffer[position] != rune('M') {
							goto l133
						}
						position++
						goto l132
					l133:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('.') {
							goto l131
						}
						position++
						if buffer[position] != rune('m') {
							goto l131
						}
						position++
						if buffer[position] != rune('o') {
							goto l131
						}
						position++
						if buffer[position] != rune('n') {
							goto l131
						}
						position++
						if buffer[position] != rune('t') {
							goto l131
						}
						position++
						if buffer[position] != rune('h') {
							goto l131
						}
						position++
					}
				l132:
					if !_rules[ruleEND]() {
						goto l131
					}
					{

						t := _deftime()
						p.start = *MonthOf(t)
						nm := t.Month() + 1
						p.stop = time.Date(t.Year(), nm, 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l131:
					position, tokenIndex = position2, tokenIndex2
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l137
						}
						position++
						if buffer[position] != rune('y') {
							goto l137
						}
						position++
						if buffer[position] != rune('e') {
							goto l137
						}
						position++
						if buffer[position] != rune('a') {
							goto l137
						}
						position++
						if buffer[position] != rune('r') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('.') {
							goto l138
						}
						position++
						if buffer[position] != rune('y') {
							goto l138
						}
						position++
						if buffer[position] != rune('r') {
							goto l138
						}
						position++
						goto l136
					l138:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('.') {
							goto l135
						}
						position++
						if buffer[position] != rune('y') {
							goto l135
						}
						position++
					}
				l136:
					if !_rules[ruleOffset]() {
						goto l135
					}
					if !_rules[ruleEND]() {
						goto l135
					}
					{

						p.start = *YearOf(_deftime())

					}
					goto l2
				l135:
					position, tokenIndex = position2, tokenIndex2
					{
						switch buffer[position] {
						case '.':
							{
								position141, tokenIndex141 := position, tokenIndex
								if buffer[position] != rune('.') {
									goto l142
								}
								position++
								if buffer[position] != rune('y') {
									goto l142
								}
								position++
								if buffer[position] != rune('e') {
									goto l142
								}
								position++
								if buffer[position] != rune('a') {
									goto l142
								}
								position++
								if buffer[position] != rune('r') {
									goto l142
								}
								position++
								goto l141
							l142:
								position, tokenIndex = position141, tokenIndex141
								if buffer[position] != rune('.') {
									goto l143
								}
								position++
								if buffer[position] != rune('y') {
									goto l143
								}
								position++
								if buffer[position] != rune('r') {
									goto l143
								}
								position++
								goto l141
							l143:
								position, tokenIndex = position141, tokenIndex141
								if buffer[position] != rune('.') {
									goto l0
								}
								position++
								if buffer[position] != rune('y') {
									goto l0
								}
								position++
							}
						l141:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = *YearOf(t)
								ny := t.Year() + 1
								p.stop = time.Date(ny, 1, 1, 0, 0, 0, 0, t.Location())

							}
						case 'y':
							if buffer[position] != rune('y') {
								goto l0
							}
							position++
							{
								position145, tokenIndex145 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l145
								}
								position++
								if buffer[position] != rune('s') {
									goto l145
								}
								position++
								if buffer[position] != rune('t') {
									goto l145
								}
								position++
								{
									position147, tokenIndex147 := position, tokenIndex
									if buffer[position] != rune('e') {
										goto l147
									}
									position++
									if buffer[position] != rune('r') {
										goto l147
									}
									position++
									if buffer[position] != rune('d') {
										goto l147
									}
									position++
									if buffer[position] != rune('a') {
										goto l147
									}
									position++
									if buffer[position] != rune('y') {
										goto l147
									}
									position++
									goto l148
								l147:
									position, tokenIndex = position147, tokenIndex147
								}
							l148:
								goto l146
							l145:
								position, tokenIndex = position145, tokenIndex145
							}
						l146:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								p.start = *Yesterday()
								p.offset = DAY
								p.offdir = -1

							}
						case 't':
							{
								position150, tokenIndex150 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l151
								}
								position++
								if buffer[position] != rune('o') {
									goto l151
								}
								position++
								if buffer[position] != rune('m') {
									goto l151
								}
								position++
								{
									position152, tokenIndex152 := position, tokenIndex
									if buffer[position] != rune('o') {
										goto l152
									}
									position++
									if buffer[position] != rune('r') {
										goto l152
									}
									position++
									if buffer[position] != rune('r') {
										goto l152
									}
									position++
									if buffer[position] != rune('o') {
										goto l152
									}
									position++
									if buffer[position] != rune('w') {
										goto l152
									}
									position++
									goto l153
								l152:
									position, tokenIndex = position152, tokenIndex152
								}
							l153:
								goto l150
							l151:
								position, tokenIndex = position150, tokenIndex150
								if buffer[position] != rune('t') {
									goto l0
								}
								position++
							}
						l150:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								p.start = *Tomorrow()
								p.offset = DAY

							}
						case ',':
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleYear]() {
								goto l0
							}
							{
								position155, tokenIndex155 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l155
								}
								goto l156
							l155:
								position, tokenIndex = position155, tokenIndex155
							}
						l156:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = time.Date(p.year, 1, 1, 0, 0, 0, 0, t.Location())

							}
						case '+', '-':
							if !_rules[ruleOffset]() {
								goto l0
							}
							{
								p.start = *_deftime()
							}
						case 'a', 'd', 'f', 'j', 'm', 'n', 'o', 's':
							if !_rules[ruleMonth]() {
								goto l0
							}
							if !_rules[ruleDay]() {
								goto l0
							}
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleYear]() {
								goto l0
							}
							{
								position159, tokenIndex159 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l159
								}
								goto l160
							l159:
								position, tokenIndex = position159, tokenIndex159
							}
						l160:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = time.Date(p.year, time.Month(p.month), p.day, 0, 0, 0, 0, t.Location())

							}
						default:
							if !_rules[ruleTime]() {
								goto l0
							}
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleMonth]() {
								goto l0
							}
							if !_rules[ruleDay]() {
								goto l0
							}
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleYear]() {
								goto l0
							}
							{
								position162, tokenIndex162 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l162
								}
								goto l163
							l162:
								position, tokenIndex = position162, tokenIndex162
							}
						l163:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = time.Date(p.year, time.Month(p.month), p.day, p.hour, p.min, 0, 0, t.Location())

							}
						}
					}

				}
			l2:
				add(ruleDTime, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Weekday <- <(('t' 'u' 'e' ('s' 'd' 'a' 'y')? Action38) / ('s' 'a' 't' ('u' 'r' 'd' 'a' 'y')? Action42) / ((&('s') ('s' 'u' 'n' ('d' 'a' 'y')? Action43)) | (&('f') ('f' 'r' 'i' ('d' 'a' 'y')? Action41)) | (&('t') ('t' 'h' 'u' ('r' 's' 'd' 'a' 'y')? Action40)) | (&('w') ('w' 'e' 'd' ('n' 'e' 's' 'd' 'a' 'y')? Action39)) | (&('m') ('m' 'o' 'n' ('d' 'a' 'y')? Action37))))> */
		func() bool {
			position165, tokenIndex165 := position, tokenIndex
			{
				position166 := position
				{
					position167, tokenIndex167 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l168
					}
					position++
					if buffer[position] != rune('u') {
						goto l168
					}
					position++
					if buffer[position] != rune('e') {
						goto l168
					}
					position++
					{
						position169, tokenIndex169 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l169
						}
						position++
						if buffer[position] != rune('d') {
							goto l169
						}
						position++
						if buffer[position] != rune('a') {
							goto l169
						}
						position++
						if buffer[position] != rune('y') {
							goto l169
						}
						position++
						goto l170
					l169:
						position, tokenIndex = position169, tokenIndex169
					}
				l170:
					{
						p.wday = 1
					}
					goto l167
				l168:
					position, tokenIndex = position167, tokenIndex167
					if buffer[position] != rune('s') {
						goto l172
					}
					position++
					if buffer[position] != rune('a') {
						goto l172
					}
					position++
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					{
						position173, tokenIndex173 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l173
						}
						position++
						if buffer[position] != rune('r') {
							goto l173
						}
						position++
						if buffer[position] != rune('d') {
							goto l173
						}
						position++
						if buffer[position] != rune('a') {
							goto l173
						}
						position++
						if buffer[position] != rune('y') {
							goto l173
						}
						position++
						goto l174
					l173:
						position, tokenIndex = position173, tokenIndex173
					}
				l174:
					{
						p.wday = 5
					}
					goto l167
				l172:
					position, tokenIndex = position167, tokenIndex167
					{
						switch buffer[position] {
						case 's':
							if buffer[position] != rune('s') {
								goto l165
							}
							position++
							if buffer[position] != rune('u') {
								goto l165
							}
							position++
							if buffer[position] != rune('n') {
								goto l165
							}
							position++
							{
								position177, tokenIndex177 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l177
								}
								position++
								if buffer[position] != rune('a') {
									goto l177
								}
								position++
								if buffer[position] != rune('y') {
									goto l177
								}
								position++
								goto l178
							l177:
								position, tokenIndex = position177, tokenIndex177
							}
						l178:
							{
								p.wday = 6
							}
						case 'f':
							if buffer[position] != rune('f') {
								goto l165
							}
							position++
							if buffer[position] != rune('r') {
								goto l165
							}
							position++
							if buffer[position] != rune('i') {
								goto l165
							}
							position++
							{
								position180, tokenIndex180 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l180
								}
								position++
								if buffer[position] != rune('a') {
									goto l180
								}
								position++
								if buffer[position] != rune('y') {
									goto l180
								}
								position++
								goto l181
							l180:
								position, tokenIndex = position180, tokenIndex180
							}
						l181:
							{
								p.wday = 4
							}
						case 't':
							if buffer[position] != rune('t') {
								goto l165
							}
							position++
							if buffer[position] != rune('h') {
								goto l165
							}
							position++
							if buffer[position] != rune('u') {
								goto l165
							}
							position++
							{
								position183, tokenIndex183 := position, tokenIndex
								if buffer[position] != rune('r') {
									goto l183
								}
								position++
								if buffer[position] != rune('s') {
									goto l183
								}
								position++
								if buffer[position] != rune('d') {
									goto l183
								}
								position++
								if buffer[position] != rune('a') {
									goto l183
								}
								position++
								if buffer[position] != rune('y') {
									goto l183
								}
								position++
								goto l184
							l183:
								position, tokenIndex = position183, tokenIndex183
							}
						l184:
							{
								p.wday = 3
							}
						case 'w':
							if buffer[position] != rune('w') {
								goto l165
							}
							position++
							if buffer[position] != rune('e') {
								goto l165
							}
							position++
							if buffer[position] != rune('d') {
								goto l165
							}
							position++
							{
								position186, tokenIndex186 := position, tokenIndex
								if buffer[position] != rune('n') {
									goto l186
								}
								position++
								if buffer[position] != rune('e') {
									goto l186
								}
								position++
								if buffer[position] != rune('s') {
									goto l186
								}
								position++
								if buffer[position] != rune('d') {
									goto l186
								}
								position++
								if buffer[position] != rune('a') {
									goto l186
								}
								position++
								if buffer[position] != rune('y') {
									goto l186
								}
								position++
								goto l187
							l186:
								position, tokenIndex = position186, tokenIndex186
							}
						l187:
							{
								p.wday = 2
							}
						default:
							if buffer[position] != rune('m') {
								goto l165
							}
							position++
							if buffer[position] != rune('o') {
								goto l165
							}
							position++
							if buffer[position] != rune('n') {
								goto l165
							}
							position++
							{
								position189, tokenIndex189 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l189
								}
								position++
								if buffer[position] != rune('a') {
									goto l189
								}
								position++
								if buffer[position] != rune('y') {
									goto l189
								}
								position++
								goto l190
							l189:
								position, tokenIndex = position189, tokenIndex189
							}
						l190:
							{
								p.wday = 0
							}
						}
					}

				}
			l167:
				add(ruleWeekday, position166)
			}
			return true
		l165:
			position, tokenIndex = position165, tokenIndex165
			return false
		},
		/* 2 Month <- <(('j' 'a' 'n' ('u' 'a' 'r' 'y')? Action44) / ('m' 'a' 'r' ('c' 'h')? Action46) / ('a' 'p' 'r' ('r' 'i' 'l')? Action47) / ('j' 'u' 'n' 'e'? Action49) / ((&('d') ('d' 'e' 'c' ('e' 'm' 'b' 'e' 'r')? Action55)) | (&('n') ('n' 'o' 'v' ('e' 'm' 'b' 'e' 'r')? Action54)) | (&('o') ('o' 'c' 't' ('t' 'o' 'b' 'e' 'r')? Action53)) | (&('s') ('s' 'e' 'p' ('t' 'e' 'm' 'b' 'e' 'r')? Action52)) | (&('a') ('a' 'u' 'g' ('u' 's' 't')? Action51)) | (&('j') ('j' 'u' 'l' 'y'? Action50)) | (&('m') ('m' 'a' 'y' Action48)) | (&('f') ('f' 'e' 'b' ('r' 'u' 'a' 'r' 'y')? Action45))))> */
		func() bool {
			position192, tokenIndex192 := position, tokenIndex
			{
				position193 := position
				{
					position194, tokenIndex194 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l195
					}
					position++
					if buffer[position] != rune('a') {
						goto l195
					}
					position++
					if buffer[position] != rune('n') {
						goto l195
					}
					position++
					{
						position196, tokenIndex196 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l196
						}
						position++
						if buffer[position] != rune('a') {
							goto l196
						}
						position++
						if buffer[position] != rune('r') {
							goto l196
						}
						position++
						if buffer[position] != rune('y') {
							goto l196
						}
						position++
						goto l197
					l196:
						position, tokenIndex = position196, tokenIndex196
					}
				l197:
					{
						p.month = 1
					}
					goto l194
				l195:
					position, tokenIndex = position194, tokenIndex194
					if buffer[position] != rune('m') {
						goto l199
					}
					position++
					if buffer[position] != rune('a') {
						goto l199
					}
					position++
					if buffer[position] != rune('r') {
						goto l199
					}
					position++
					{
						position200, tokenIndex200 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l200
						}
						position++
						if buffer[position] != rune('h') {
							goto l200
						}
						position++
						goto l201
					l200:
						position, tokenIndex = position200, tokenIndex200
					}
				l201:
					{
						p.month = 3
					}
					goto l194
				l199:
					position, tokenIndex = position194, tokenIndex194
					if buffer[position] != rune('a') {
						goto l203
					}
					position++
					if buffer[position] != rune('p') {
						goto l203
					}
					position++
					if buffer[position] != rune('r') {
						goto l203
					}
					position++
					{
						position204, tokenIndex204 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l204
						}
						position++
						if buffer[position] != rune('i') {
							goto l204
						}
						position++
						if buffer[position] != rune('l') {
							goto l204
						}
						position++
						goto l205
					l204:
						position, tokenIndex = position204, tokenIndex204
					}
				l205:
					{
						p.month = 4
					}
					goto l194
				l203:
					position, tokenIndex = position194, tokenIndex194
					if buffer[position] != rune('j') {
						goto l207
					}
					position++
					if buffer[position] != rune('u') {
						goto l207
					}
					position++
					if buffer[position] != rune('n') {
						goto l207
					}
					position++
					{
						position208, tokenIndex208 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l208
						}
						position++
						goto l209
					l208:
						position, tokenIndex = position208, tokenIndex208
					}
				l209:
					{
						p.month = 6
					}
					goto l194
				l207:
					position, tokenIndex = position194, tokenIndex194
					{
						switch buffer[position] {
						case 'd':
							if buffer[position] != rune('d') {
								goto l192
							}
							position++
							if buffer[position] != rune('e') {
								goto l192
							}
							position++
							if buffer[position] != rune('c') {
								goto l192
							}
							position++
							{
								position212, tokenIndex212 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l212
								}
								position++
								if buffer[position] != rune('m') {
									goto l212
								}
								position++
								if buffer[position] != rune('b') {
									goto l212
								}
								position++
								if buffer[position] != rune('e') {
									goto l212
								}
								position++
								if buffer[position] != rune('r') {
									goto l212
								}
								position++
								goto l213
							l212:
								position, tokenIndex = position212, tokenIndex212
							}
						l213:
							{
								p.month = 12
							}
						case 'n':
							if buffer[position] != rune('n') {
								goto l192
							}
							position++
							if buffer[position] != rune('o') {
								goto l192
							}
							position++
							if buffer[position] != rune('v') {
								goto l192
							}
							position++
							{
								position215, tokenIndex215 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l215
								}
								position++
								if buffer[position] != rune('m') {
									goto l215
								}
								position++
								if buffer[position] != rune('b') {
									goto l215
								}
								position++
								if buffer[position] != rune('e') {
									goto l215
								}
								position++
								if buffer[position] != rune('r') {
									goto l215
								}
								position++
								goto l216
							l215:
								position, tokenIndex = position215, tokenIndex215
							}
						l216:
							{
								p.month = 11
							}
						case 'o':
							if buffer[position] != rune('o') {
								goto l192
							}
							position++
							if buffer[position] != rune('c') {
								goto l192
							}
							position++
							if buffer[position] != rune('t') {
								goto l192
							}
							position++
							{
								position218, tokenIndex218 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l218
								}
								position++
								if buffer[position] != rune('o') {
									goto l218
								}
								position++
								if buffer[position] != rune('b') {
									goto l218
								}
								position++
								if buffer[position] != rune('e') {
									goto l218
								}
								position++
								if buffer[position] != rune('r') {
									goto l218
								}
								position++
								goto l219
							l218:
								position, tokenIndex = position218, tokenIndex218
							}
						l219:
							{
								p.month = 10
							}
						case 's':
							if buffer[position] != rune('s') {
								goto l192
							}
							position++
							if buffer[position] != rune('e') {
								goto l192
							}
							position++
							if buffer[position] != rune('p') {
								goto l192
							}
							position++
							{
								position221, tokenIndex221 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l221
								}
								position++
								if buffer[position] != rune('e') {
									goto l221
								}
								position++
								if buffer[position] != rune('m') {
									goto l221
								}
								position++
								if buffer[position] != rune('b') {
									goto l221
								}
								position++
								if buffer[position] != rune('e') {
									goto l221
								}
								position++
								if buffer[position] != rune('r') {
									goto l221
								}
								position++
								goto l222
							l221:
								position, tokenIndex = position221, tokenIndex221
							}
						l222:
							{
								p.month = 9
							}
						case 'a':
							if buffer[position] != rune('a') {
								goto l192
							}
							position++
							if buffer[position] != rune('u') {
								goto l192
							}
							position++
							if buffer[position] != rune('g') {
								goto l192
							}
							position++
							{
								position224, tokenIndex224 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l224
								}
								position++
								if buffer[position] != rune('s') {
									goto l224
								}
								position++
								if buffer[position] != rune('t') {
									goto l224
								}
								position++
								goto l225
							l224:
								position, tokenIndex = position224, tokenIndex224
							}
						l225:
							{
								p.month = 8
							}
						case 'j':
							if buffer[position] != rune('j') {
								goto l192
							}
							position++
							if buffer[position] != rune('u') {
								goto l192
							}
							position++
							if buffer[position] != rune('l') {
								goto l192
							}
							position++
							{
								position227, tokenIndex227 := position, tokenIndex
								if buffer[position] != rune('y') {
									goto l227
								}
								position++
								goto l228
							l227:
								position, tokenIndex = position227, tokenIndex227
							}
						l228:
							{
								p.month = 7
							}
						case 'm':
							if buffer[position] != rune('m') {
								goto l192
							}
							position++
							if buffer[position] != rune('a') {
								goto l192
							}
							position++
							if buffer[position] != rune('y') {
								goto l192
							}
							position++
							{
								p.month = 5
							}
						default:
							if buffer[position] != rune('f') {
								goto l192
							}
							position++
							if buffer[position] != rune('e') {
								goto l192
							}
							position++
							if buffer[position] != rune('b') {
								goto l192
							}
							position++
							{
								position231, tokenIndex231 := position, tokenIndex
								if buffer[position] != rune('r') {
									goto l231
								}
								position++
								if buffer[position] != rune('u') {
									goto l231
								}
								position++
								if buffer[position] != rune('a') {
									goto l231
								}
								position++
								if buffer[position] != rune('r') {
									goto l231
								}
								position++
								if buffer[position] != rune('y') {
									goto l231
								}
								position++
								goto l232
							l231:
								position, tokenIndex = position231, tokenIndex231
							}
						l232:
							{
								p.month = 2
							}
						}
					}

				}
			l194:
				add(ruleMonth, position193)
			}
			return true
		l192:
			position, tokenIndex = position192, tokenIndex192
			return false
		},
		/* 3 Day <- <((<([1-9] ![0-9])> / ((&('3') <('3' [0-1])>) | (&('2') <('2' [0-9])>) | (&('1') <('1' [0-9])>))) Action56)> */
		func() bool {
			position234, tokenIndex234 := position, tokenIndex
			{
				position235 := position
				{
					position236, tokenIndex236 := position, tokenIndex
					{
						position238 := position
						if c := buffer[position]; c < rune('1') || c > rune('9') {
							goto l237
						}
						position++
						{
							position239, tokenIndex239 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l239
							}
							position++
							goto l237
						l239:
							position, tokenIndex = position239, tokenIndex239
						}
						begin := position238
						end := position
						text = string(buffer[begin:end])
					}
					goto l236
				l237:
					position, tokenIndex = position236, tokenIndex236
					{
						switch buffer[position] {
						case '3':
							{
								position241 := position
								if buffer[position] != rune('3') {
									goto l234
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('1') {
									goto l234
								}
								position++
								begin := position241
								end := position
								text = string(buffer[begin:end])
							}
						case '2':
							{
								position242 := position
								if buffer[position] != rune('2') {
									goto l234
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l234
								}
								position++
								begin := position242
								end := position
								text = string(buffer[begin:end])
							}
						default:
							{
								position243 := position
								if buffer[position] != rune('1') {
									goto l234
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l234
								}
								position++
								begin := position243
								end := position
								text = string(buffer[begin:end])
							}
						}
					}

				}
			l236:
				{

					i, _ := strconv.Atoi(text)
					p.day = i

				}
				add(ruleDay, position235)
			}
			return true
		l234:
			position, tokenIndex = position234, tokenIndex234
			return false
		},
		/* 4 Time <- <(('1' '2' ('p' / 'P') ('m' / 'M')? Action57) / ('1' '2' ('a' / 'A') ('m' / 'M')? Action58) / (Hour12 Minute AmPm) / (Hour12 AmPm) / (Hour Minute !AmPm) / (Hour !AmPm))> */
		func() bool {
			position245, tokenIndex245 := position, tokenIndex
			{
				position246 := position
				{
					position247, tokenIndex247 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l248
					}
					position++
					if buffer[position] != rune('2') {
						goto l248
					}
					position++
					{
						position249, tokenIndex249 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l250
						}
						position++
						goto l249
					l250:
						position, tokenIndex = position249, tokenIndex249
						if buffer[position] != rune('P') {
							goto l248
						}
						position++
					}
				l249:
					{
						position251, tokenIndex251 := position, tokenIndex
						{
							position253, tokenIndex253 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l254
							}
							position++
							goto l253
						l254:
							position, tokenIndex = position253, tokenIndex253
							if buffer[position] != rune('M') {
								goto l251
							}
							position++
						}
					l253:
						goto l252
					l251:
						position, tokenIndex = position251, tokenIndex251
					}
				l252:
					{
						p.hour = 12
					}
					goto l247
				l248:
					position, tokenIndex = position247, tokenIndex247
					if buffer[position] != rune('1') {
						goto l256
					}
					position++
					if buffer[position] != rune('2') {
						goto l256
					}
					position++
					{
						position257, tokenIndex257 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l258
						}
						position++
						goto l257
					l258:
						position, tokenIndex = position257, tokenIndex257
						if buffer[position] != rune('A') {
							goto l256
						}
						position++
					}
				l257:
					{
						position259, tokenIndex259 := position, tokenIndex
						{
							position261, tokenIndex261 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l262
							}
							position++
							goto l261
						l262:
							position, tokenIndex = position261, tokenIndex261
							if buffer[position] != rune('M') {
								goto l259
							}
							position++
						}
					l261:
						goto l260
					l259:
						position, tokenIndex = position259, tokenIndex259
					}
				l260:
					{
						p.hour = 0
					}
					goto l247
				l256:
					position, tokenIndex = position247, tokenIndex247
					if !_rules[ruleHour12]() {
						goto l264
					}
					if !_rules[ruleMinute]() {
						goto l264
					}
					if !_rules[ruleAmPm]() {
						goto l264
					}
					goto l247
				l264:
					position, tokenIndex = position247, tokenIndex247
					if !_rules[ruleHour12]() {
						goto l265
					}
					if !_rules[ruleAmPm]() {
						goto l265
					}
					goto l247
				l265:
					position, tokenIndex = position247, tokenIndex247
					if !_rules[ruleHour]() {
						goto l266
					}
					if !_rules[ruleMinute]() {
						goto l266
					}
					{
						position267, tokenIndex267 := position, tokenIndex
						if !_rules[ruleAmPm]() {
							goto l267
						}
						goto l266
					l267:
						position, tokenIndex = position267, tokenIndex267
					}
					goto l247
				l266:
					position, tokenIndex = position247, tokenIndex247
					if !_rules[ruleHour]() {
						goto l245
					}
					{
						position268, tokenIndex268 := position, tokenIndex
						if !_rules[ruleAmPm]() {
							goto l268
						}
						goto l245
					l268:
						position, tokenIndex = position268, tokenIndex268
					}
				}
			l247:
				add(ruleTime, position246)
			}
			return true
		l245:
			position, tokenIndex = position245, tokenIndex245
			return false
		},
		/* 5 Hour <- <((<([0-1] [0-9])> / <('2' [0-3])> / <[0-9]>) Action59)> */
		func() bool {
			position269, tokenIndex269 := position, tokenIndex
			{
				position270 := position
				{
					position271, tokenIndex271 := position, tokenIndex
					{
						position273 := position
						if c := buffer[position]; c < rune('0') || c > rune('1') {
							goto l272
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l272
						}
						position++
						begin := position273
						end := position
						text = string(buffer[begin:end])
					}
					goto l271
				l272:
					position, tokenIndex = position271, tokenIndex271
					{
						position275 := position
						if buffer[position] != rune('2') {
							goto l274
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('3') {
							goto l274
						}
						position++
						begin := position275
						end := position
						text = string(buffer[begin:end])
					}
					goto l271
				l274:
					position, tokenIndex = position271, tokenIndex271
					{
						position276 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l269
						}
						position++
						begin := position276
						end := position
						text = string(buffer[begin:end])
					}
				}
			l271:
				{

					i, _ := strconv.Atoi(text)
					p.hour = i

				}
				add(ruleHour, position270)
			}
			return true
		l269:
			position, tokenIndex = position269, tokenIndex269
			return false
		},
		/* 6 Hour12 <- <((<('1' [0-2])> / <[1-9]>) Action60)> */
		func() bool {
			position278, tokenIndex278 := position, tokenIndex
			{
				position279 := position
				{
					position280, tokenIndex280 := position, tokenIndex
					{
						position282 := position
						if buffer[position] != rune('1') {
							goto l281
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('2') {
							goto l281
						}
						position++
						begin := position282
						end := position
						text = string(buffer[begin:end])
					}
					goto l280
				l281:
					position, tokenIndex = position280, tokenIndex280
					{
						position283 := position
						if c := buffer[position]; c < rune('1') || c > rune('9') {
							goto l278
						}
						position++
						begin := position283
						end := position
						text = string(buffer[begin:end])
					}
				}
			l280:
				{

					i, _ := strconv.Atoi(text)
					p.hour = i

				}
				add(ruleHour12, position279)
			}
			return true
		l278:
			position, tokenIndex = position278, tokenIndex278
			return false
		},
		/* 7 AmPm <- <(('a' 'm'?) / ('p' 'm'? Action61))> */
		func() bool {
			position285, tokenIndex285 := position, tokenIndex
			{
				position286 := position
				{
					position287, tokenIndex287 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l288
					}
					position++
					{
						position289, tokenIndex289 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l289
						}
						position++
						goto l290
					l289:
						position, tokenIndex = position289, tokenIndex289
					}
				l290:
					goto l287
				l288:
					position, tokenIndex = position287, tokenIndex287
					if buffer[position] != rune('p') {
						goto l285
					}
					position++
					{
						position291, tokenIndex291 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l291
						}
						position++
						goto l292
					l291:
						position, tokenIndex = position291, tokenIndex291
					}
				l292:
					{
						p.hour += 12
					}
				}
			l287:
				add(ruleAmPm, position286)
			}
			return true
		l285:
			position, tokenIndex = position285, tokenIndex285
			return false
		},
		/* 8 Minute <- <(<([0-5] [0-9])> Action62)> */
		func() bool {
			position294, tokenIndex294 := position, tokenIndex
			{
				position295 := position
				{
					position296 := position
					if c := buffer[position]; c < rune('0') || c > rune('5') {
						goto l294
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l294
					}
					position++
					begin := position296
					end := position
					text = string(buffer[begin:end])
				}
				{

					i, _ := strconv.Atoi(text)
					p.min = i

				}
				add(ruleMinute, position295)
			}
			return true
		l294:
			position, tokenIndex = position294, tokenIndex294
			return false
		},
		/* 9 Year <- <(<([1-9] [0-9]*)> Action63)> */
		func() bool {
			position298, tokenIndex298 := position, tokenIndex
			{
				position299 := position
				{
					position300 := position
					if c := buffer[position]; c < rune('1') || c > rune('9') {
						goto l298
					}
					position++
				l301:
					{
						position302, tokenIndex302 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l302
						}
						position++
						goto l301
					l302:
						position, tokenIndex = position302, tokenIndex302
					}
					begin := position300
					end := position
					text = string(buffer[begin:end])
				}
				{

					i, _ := strconv.Atoi(text)
					p.year = i

				}
				add(ruleYear, position299)
			}
			return true
		l298:
			position, tokenIndex = position298, tokenIndex298
			return false
		},
		/* 10 Offset <- <(<(OffDir (OffYear / OffWeek / OffDay / OffHour / OffMinute / OffSecond)+)> Action64)> */
		func() bool {
			position304, tokenIndex304 := position, tokenIndex
			{
				position305 := position
				{
					position306 := position
					{
						position307 := position
						{
							position308, tokenIndex308 := position, tokenIndex
							if buffer[position] != rune('+') {
								goto l309
							}
							position++
							{
								p.offdir = 1
							}
							goto l308
						l309:
							position, tokenIndex = position308, tokenIndex308
							if buffer[position] != rune('-') {
								goto l304
							}
							position++
							{
								p.offdir = -1
							}
						}
					l308:
						add(ruleOffDir, position307)
					}
					{
						position314, tokenIndex314 := position, tokenIndex
						{
							position316 := position
							if !_rules[ruleFLOAT]() {
								goto l315
							}
							if buffer[position] != rune('y') {
								goto l315
							}
							position++
							{
								p.offset += p._float * YEAR
							}
							add(ruleOffYear, position316)
						}
						goto l314
					l315:
						position, tokenIndex = position314, tokenIndex314
						{
							position319 := position
							if !_rules[ruleFLOAT]() {
								goto l318
							}
							if buffer[position] != rune('w') {
								goto l318
							}
							position++
							{
								p.offset += p._float * WEEK
							}
							add(ruleOffWeek, position319)
						}
						goto l314
					l318:
						position, tokenIndex = position314, tokenIndex314
						{
							position322 := position
							if !_rules[ruleFLOAT]() {
								goto l321
							}
							if buffer[position] != rune('d') {
								goto l321
							}
							position++
							{
								p.offset += p._float * DAY
							}
							add(ruleOffDay, position322)
						}
						goto l314
					l321:
						position, tokenIndex = position314, tokenIndex314
						{
							position325 := position
							if !_rules[ruleFLOAT]() {
								goto l324
							}
							if buffer[position] != rune('h') {
								goto l324
							}
							position++
							{
								p.offset += p._float * HOUR
							}
							add(ruleOffHour, position325)
						}
						goto l314
					l324:
						position, tokenIndex = position314, tokenIndex314
						{
							position328 := position
							if !_rules[ruleFLOAT]() {
								goto l327
							}
							if buffer[position] != rune('m') {
								goto l327
							}
							position++
							{
								p.offset += p._float * MINUTE
							}
							add(ruleOffMinute, position328)
						}
						goto l314
					l327:
						position, tokenIndex = position314, tokenIndex314
						{
							position330 := position
							if !_rules[ruleFLOAT]() {
								goto l304
							}
							if buffer[position] != rune('s') {
								goto l304
							}
							position++
							{
								p.offset += p._float * SECOND
							}
							add(ruleOffSecond, position330)
						}
					}
				l314:
				l312:
					{
						position313, tokenIndex313 := position, tokenIndex
						{
							position332, tokenIndex332 := position, tokenIndex
							{
								position334 := position
								if !_rules[ruleFLOAT]() {
									goto l333
								}
								if buffer[position] != rune('y') {
									goto l333
								}
								position++
								{
									p.offset += p._float * YEAR
								}
								add(ruleOffYear, position334)
							}
							goto l332
						l333:
							position, tokenIndex = position332, tokenIndex332
							{
								position337 := position
								if !_rules[ruleFLOAT]() {
									goto l336
								}
								if buffer[position] != rune('w') {
									goto l336
								}
								position++
								{
									p.offset += p._float * WEEK
								}
								add(ruleOffWeek, position337)
							}
							goto l332
						l336:
							position, tokenIndex = position332, tokenIndex332
							{
								position340 := position
								if !_rules[ruleFLOAT]() {
									goto l339
								}
								if buffer[position] != rune('d') {
									goto l339
								}
								position++
								{
									p.offset += p._float * DAY
								}
								add(ruleOffDay, position340)
							}
							goto l332
						l339:
							position, tokenIndex = position332, tokenIndex332
							{
								position343 := position
								if !_rules[ruleFLOAT]() {
									goto l342
								}
								if buffer[position] != rune('h') {
									goto l342
								}
								position++
								{
									p.offset += p._float * HOUR
								}
								add(ruleOffHour, position343)
							}
							goto l332
						l342:
							position, tokenIndex = position332, tokenIndex332
							{
								position346 := position
								if !_rules[ruleFLOAT]() {
									goto l345
								}
								if buffer[position] != rune('m') {
									goto l345
								}
								position++
								{
									p.offset += p._float * MINUTE
								}
								add(ruleOffMinute, position346)
							}
							goto l332
						l345:
							position, tokenIndex = position332, tokenIndex332
							{
								position348 := position
								if !_rules[ruleFLOAT]() {
									goto l313
								}
								if buffer[position] != rune('s') {
									goto l313
								}
								position++
								{
									p.offset += p._float * SECOND
								}
								add(ruleOffSecond, position348)
							}
						}
					l332:
						goto l312
					l313:
						position, tokenIndex = position313, tokenIndex313
					}
					begin := position306
					end := position
					text = string(buffer[begin:end])
				}
				{
					p.offset *= p.offdir
				}
				add(ruleOffset, position305)
			}
			return true
		l304:
			position, tokenIndex = position304, tokenIndex304
			return false
		},
		/* 11 OffDir <- <(('+' Action65) / ('-' Action66))> */
		nil,
		/* 12 OffYear <- <(FLOAT 'y' Action67)> */
		nil,
		/* 13 OffWeek <- <(FLOAT 'w' Action68)> */
		nil,
		/* 14 OffDay <- <(FLOAT 'd' Action69)> */
		nil,
		/* 15 OffHour <- <(FLOAT 'h' Action70)> */
		nil,
		/* 16 OffMinute <- <(FLOAT 'm' Action71)> */
		nil,
		/* 17 OffSecond <- <(FLOAT 's' Action72)> */
		nil,
		/* 18 FLOAT <- <(<([0-9]+ ('.' [0-9]+)?)> Action73)> */
		func() bool {
			position358, tokenIndex358 := position, tokenIndex
			{
				position359 := position
				{
					position360 := position
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l358
					}
					position++
				l361:
					{
						position362, tokenIndex362 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l362
						}
						position++
						goto l361
					l362:
						position, tokenIndex = position362, tokenIndex362
					}
					{
						position363, tokenIndex363 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l363
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l363
						}
						position++
					l365:
						{
							position366, tokenIndex366 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l366
							}
							position++
							goto l365
						l366:
							position, tokenIndex = position366, tokenIndex366
						}
						goto l364
					l363:
						position, tokenIndex = position363, tokenIndex363
					}
				l364:
					begin := position360
					end := position
					text = string(buffer[begin:end])
				}
				{

					f, _ := strconv.ParseFloat(text, 64)
					p._float = f

				}
				add(ruleFLOAT, position359)
			}
			return true
		l358:
			position, tokenIndex = position358, tokenIndex358
			return false
		},
		/* 19 END <- <!.> */
		func() bool {
			position368, tokenIndex368 := position, tokenIndex
			{
				position369 := position
				{
					position370, tokenIndex370 := position, tokenIndex
					if !matchDot() {
						goto l370
					}
					goto l368
				l370:
					position, tokenIndex = position370, tokenIndex370
				}
				add(ruleEND, position369)
			}
			return true
		l368:
			position, tokenIndex = position368, tokenIndex368
			return false
		},
		/* 21 Action0 <- <{ p.start = *_deftime() }> */
		nil,
		/* 22 Action1 <- <{
		   p.start = *_deftime()
		   mon := MondayOf(&p.start)
		   p.start = mon.Add(time.Duration(p.wday) * time.Hour * 24)
		 }> */
		nil,
		/* 23 Action2 <- <{
		   t := _deftime()
		   m := time.Month(p.month)
		   p.start = time.Date(t.Year(),m,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 24 Action3 <- <{
		   t := *Today()
		   p.start = time.Date(t.Year(),t.Month(),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 25 Action4 <- <{
		   t := MondayOf(Today())
		   day := t.Day() + p.wday
		   p.start = time.Date(t.Year(),t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 26 Action5 <- <{
		   t := MondayOf(Today())
		   day := t.Day() + p.wday
		   p.start = time.Date(p.year,t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 27 Action6 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 28 Action7 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 29 Action8 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,t.Month(),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 30 Action9 <- <{
		   t := _deftime()
		   day := MondayOf(t).Day() + p.wday
		   p.start = time.Date(p.year,t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 31 Action10 <- <{
		     t := _deftime()
		     p.start = time.Date(t.Year(),time.Month(p.month),p.day,0,0,0,0,t.Location())
		}> */
		nil,
		/* 32 Action11 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),p.day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 33 Action12 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,1,1,0,0,0,0,t.Location())

		 }> */
		nil,
		/* 34 Action13 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 35 Action14 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),p.day,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 36 Action15 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),p.day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 37 Action16 <- <{ t:=*_deftime(); p.start, p.stop = t,t }> */
		nil,
		/* 38 Action17 <- <{ p.start = *_deftime() }> */
		nil,
		/* 39 Action18 <- <{ p.start = *Today() }> */
		nil,
		/* 40 Action19 <- <{ p.start = *Today(); p.offset = DAY }> */
		nil,
		/* 41 Action20 <- <{ p.start = *Tomorrow() }> */
		nil,
		/* 42 Action21 <- <{ p.start = *Tomorrow() }> */
		nil,
		/* 43 Action22 <- <{
		   p.start = *Tomorrow()
		   p.offset = DAY
		 }> */
		nil,
		/* 44 Action23 <- <{
		   p.start = *Yesterday()
		 }> */
		nil,
		/* 45 Action24 <- <{
		   p.start = *Yesterday()
		   p.offset = DAY
		   p.offdir = -1
		 }> */
		nil,
		/* 46 Action25 <- <{
		   p.start = *_deftime()
		 }> */
		nil,
		/* 47 Action26 <- <{
		   p.start = *_deftime()
		   p.stop = p.start
		 }> */
		nil,
		/* 48 Action27 <- <{
		   p.start = *MinuteOf(_deftime())
		 }> */
		nil,
		/* 49 Action28 <- <{
		   p.start = *MinuteOf(_deftime())
		   p.offset = MINUTE
		 }> */
		nil,
		/* 50 Action29 <- <{
		   p.start = *HourOf(_deftime())
		 }> */
		nil,
		/* 51 Action30 <- <{
		   p.start = *HourOf(_deftime())
		   p.offset = HOUR
		 }> */
		nil,
		/* 52 Action31 <- <{
		   p.start = *WeekOf(_deftime())
		 }> */
		nil,
		/* 53 Action32 <- <{
		   p.start = *WeekOf(_deftime())
		   p.offset = WEEK
		 }> */
		nil,
		/* 54 Action33 <- <{
		   p.start = *MonthOf(_deftime())
		 }> */
		nil,
		/* 55 Action34 <- <{
		   t := _deftime()
		   p.start = *MonthOf(t)
		   nm := t.Month() + 1
		   p.stop = time.Date(t.Year(),nm,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 56 Action35 <- <{
		   p.start = *YearOf(_deftime())
		 }> */
		nil,
		/* 57 Action36 <- <{
		   t := _deftime()
		   p.start = *YearOf(t)
		   ny := t.Year() + 1
		   p.stop = time.Date(ny,1,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 58 Action37 <- <{p.wday = 0}> */
		nil,
		/* 59 Action38 <- <{p.wday = 1}> */
		nil,
		/* 60 Action39 <- <{p.wday = 2}> */
		nil,
		/* 61 Action40 <- <{p.wday = 3}> */
		nil,
		/* 62 Action41 <- <{p.wday = 4}> */
		nil,
		/* 63 Action42 <- <{p.wday = 5}> */
		nil,
		/* 64 Action43 <- <{p.wday = 6}> */
		nil,
		/* 65 Action44 <- <{p.month = 1}> */
		nil,
		/* 66 Action45 <- <{p.month = 2}> */
		nil,
		/* 67 Action46 <- <{p.month = 3}> */
		nil,
		/* 68 Action47 <- <{p.month = 4}> */
		nil,
		/* 69 Action48 <- <{p.month = 5}> */
		nil,
		/* 70 Action49 <- <{p.month = 6}> */
		nil,
		/* 71 Action50 <- <{p.month = 7}> */
		nil,
		/* 72 Action51 <- <{p.month = 8}> */
		nil,
		/* 73 Action52 <- <{p.month = 9}> */
		nil,
		/* 74 Action53 <- <{p.month = 10}> */
		nil,
		/* 75 Action54 <- <{p.month = 11}> */
		nil,
		/* 76 Action55 <- <{p.month = 12}> */
		nil,
		nil,
		/* 78 Action56 <- <{
		   i, _ := strconv.Atoi(text)
		   p.day = i
		 }> */
		nil,
		/* 79 Action57 <- <{p.hour = 12}> */
		nil,
		/* 80 Action58 <- <{p.hour = 0}> */
		nil,
		/* 81 Action59 <- <{
		   i, _ := strconv.Atoi(text)
		   p.hour = i
		 }> */
		nil,
		/* 82 Action60 <- <{
		   i, _ := strconv.Atoi(text)
		   p.hour = i
		 }> */
		nil,
		/* 83 Action61 <- <{p.hour += 12}> */
		nil,
		/* 84 Action62 <- <{
		   i, _ := strconv.Atoi(text)
		   p.min = i
		 }> */
		nil,
		/* 85 Action63 <- <{
		   i, _ := strconv.Atoi(text)
		   p.year = i
		 }> */
		nil,
		/* 86 Action64 <- <{ p.offset *= p.offdir }> */
		nil,
		/* 87 Action65 <- <{p.offdir=1}> */
		nil,
		/* 88 Action66 <- <{p.offdir=-1}> */
		nil,
		/* 89 Action67 <- <{p.offset += p._float*YEAR}> */
		nil,
		/* 90 Action68 <- <{p.offset += p._float*WEEK}> */
		nil,
		/* 91 Action69 <- <{p.offset += p._float*DAY}> */
		nil,
		/* 92 Action70 <- <{p.offset += p._float*HOUR}> */
		nil,
		/* 93 Action71 <- <{p.offset += p._float*MINUTE}> */
		nil,
		/* 94 Action72 <- <{p.offset += p._float*SECOND}> */
		nil,
		/* 95 Action73 <- <{
		   f, _ := strconv.ParseFloat(text,64);
		   p._float = f
		}> */
		nil,
	}
	p.rules = _rules
	return nil
}
