package dtime

// Code generated by peg -noast -switch -inline -strict -output grammar.go grammar.peg DO NOT EDIT.

import (
	"fmt"
	"sort"
	"strconv"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleDTime
	ruleWeekday
	ruleMonth
	ruleDay
	ruleTime
	ruleHour
	ruleHour12
	ruleAmPm
	ruleMinute
	ruleYear
	ruleOffset
	ruleOffDir
	ruleOffYear
	ruleOffWeek
	ruleOffDay
	ruleOffHour
	ruleOffMinute
	ruleOffSecond
	ruleFLOAT
	ruleEND
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	rulePegText
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
	ruleAction71
)

var rul3s = [...]string{
	"Unknown",
	"DTime",
	"Weekday",
	"Month",
	"Day",
	"Time",
	"Hour",
	"Hour12",
	"AmPm",
	"Minute",
	"Year",
	"Offset",
	"OffDir",
	"OffYear",
	"OffWeek",
	"OffDay",
	"OffHour",
	"OffMinute",
	"OffSecond",
	"FLOAT",
	"END",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"PegText",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
	"Action71",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type spanParser struct {
	start time.Time
	stop  time.Time

	offset float64
	offdir float64

	year  int
	month int
	day   int
	wday  int
	hour  int
	min   int

	_float float64
	_int   int
	_e     error

	Buffer string
	buffer []rune
	rules  [94]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
}

func (p *spanParser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *spanParser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *spanParser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func Pretty(pretty bool) func(*spanParser) error {
	return func(p *spanParser) error {
		p.Pretty = pretty
		return nil
	}
}

func (p *spanParser) Init(options ...func(*spanParser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
		text                 string
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		if matches {
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 DTime <- <((Weekday Offset? END Action1) / (Month Offset? END Action2) / (Time Offset? END Action3) / (Time ',' Weekday Offset? END Action4) / (Time ',' Weekday ',' Year Offset? END Action5) / (Time ',' Month Offset? END Action6) / (Time ',' Month ',' Year Offset? END Action7) / (Time ',' Year Offset? END Action8) / (Weekday ',' Year Offset? END Action9) / (Month Day Offset? END Action10) / (Time ',' Month Day Offset? END Action11) / (Month ',' Year Offset? END Action13) / (Month Day ',' Year Offset? END Action14) / ((('t' 'o' 'd' 'a' 'y') / ('.' 'd' ('a' 'y')?)) Offset END Action17) / ((('t' 'o' 'd' 'a' 'y') / ('.' 'd' ('a' 'y')?)) END Action18) / ((('t' 'o' 'm' ('o' 'r' 'r' 'o' 'w')?) / 't') Offset END Action19) / ('y' ('e' 's' 't' ('e' 'r' 'd' 'a' 'y')?)? Offset END Action21) / ('.' ('s' ('e' 'c' ('o' 'n' 'd')?)?)? Offset END Action23) / ('.' ('s' ('e' 'c' ('o' 'n' 'd')?)?)? END Action24) / ('.' ('m' ('i' 'n' ('u' 't' 'e')?)?)? Offset END Action25) / ('.' ('m' ('i' 'n' ('u' 't' 'e')?)?)? END Action26) / ('.' 'h' ('r' / ('o' 'u' 'r'))? Offset END Action27) / ('.' 'h' ('r' / ('o' 'u' 'r'))? END Action28) / ('.' 'w' ('k' / ('e' 'e' 'k'))? Offset END Action29) / ('.' 'w' ('k' / ('e' 'e' 'k'))? END Action30) / ((('.' 'M') / ('.' 'm' 'o' 'n' 't' 'h')) Offset END Action31) / ((('.' 'M') / ('.' 'm' 'o' 'n' 't' 'h')) END Action32) / ((('.' 'y' 'e' 'a' 'r') / ('.' 'y' 'r') / ('.' 'y')) Offset END Action33) / ((&('.') ((('.' 'y' 'e' 'a' 'r') / ('.' 'y' 'r') / ('.' 'y')) END Action34)) | (&('y') ('y' ('e' 's' 't' ('e' 'r' 'd' 'a' 'y')?)? END Action22)) | (&('t') ((('t' 'o' 'm' ('o' 'r' 'r' 'o' 'w')?) / 't') END Action20)) | (&('n') ('n' 'o' 'w' Offset? END Action16)) | (&(',') (',' Year Offset? END Action12)) | (&('+' | '-') (Offset Action0)) | (&('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') (Time ',' Month Day ',' Year Offset? END Action15))))> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[ruleWeekday]() {
						goto l3
					}
					{
						position4, tokenIndex4 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l4
						}
						goto l5
					l4:
						position, tokenIndex = position4, tokenIndex4
					}
				l5:
					if !_rules[ruleEND]() {
						goto l3
					}
					{

						p.start = *_deftime()
						mon := MondayOf(&p.start)
						p.start = mon.Add(time.Duration(p.wday) * time.Hour * 24)

					}
					goto l2
				l3:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l7
					}
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l8
						}
						goto l9
					l8:
						position, tokenIndex = position8, tokenIndex8
					}
				l9:
					if !_rules[ruleEND]() {
						goto l7
					}
					{

						t := _deftime()
						m := time.Month(p.month)
						p.start = time.Date(t.Year(), m, 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l7:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l11
					}
					{
						position12, tokenIndex12 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l12
						}
						goto l13
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
				l13:
					if !_rules[ruleEND]() {
						goto l11
					}
					{

						t := *Today()
						p.start = time.Date(t.Year(), t.Month(), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l11:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l15
					}
					if buffer[position] != rune(',') {
						goto l15
					}
					position++
					if !_rules[ruleWeekday]() {
						goto l15
					}
					{
						position16, tokenIndex16 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l16
						}
						goto l17
					l16:
						position, tokenIndex = position16, tokenIndex16
					}
				l17:
					if !_rules[ruleEND]() {
						goto l15
					}
					{

						t := MondayOf(Today())
						day := t.Day() + p.wday
						p.start = time.Date(t.Year(), t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l15:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l19
					}
					if buffer[position] != rune(',') {
						goto l19
					}
					position++
					if !_rules[ruleWeekday]() {
						goto l19
					}
					if buffer[position] != rune(',') {
						goto l19
					}
					position++
					if !_rules[ruleYear]() {
						goto l19
					}
					{
						position20, tokenIndex20 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l20
						}
						goto l21
					l20:
						position, tokenIndex = position20, tokenIndex20
					}
				l21:
					if !_rules[ruleEND]() {
						goto l19
					}
					{

						t := MondayOf(Today())
						day := t.Day() + p.wday
						p.start = time.Date(p.year, t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l19:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l23
					}
					if buffer[position] != rune(',') {
						goto l23
					}
					position++
					if !_rules[ruleMonth]() {
						goto l23
					}
					{
						position24, tokenIndex24 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l24
						}
						goto l25
					l24:
						position, tokenIndex = position24, tokenIndex24
					}
				l25:
					if !_rules[ruleEND]() {
						goto l23
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l23:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l27
					}
					if buffer[position] != rune(',') {
						goto l27
					}
					position++
					if !_rules[ruleMonth]() {
						goto l27
					}
					if buffer[position] != rune(',') {
						goto l27
					}
					position++
					if !_rules[ruleYear]() {
						goto l27
					}
					{
						position28, tokenIndex28 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l28
						}
						goto l29
					l28:
						position, tokenIndex = position28, tokenIndex28
					}
				l29:
					if !_rules[ruleEND]() {
						goto l27
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l27:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l31
					}
					if buffer[position] != rune(',') {
						goto l31
					}
					position++
					if !_rules[ruleYear]() {
						goto l31
					}
					{
						position32, tokenIndex32 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l32
						}
						goto l33
					l32:
						position, tokenIndex = position32, tokenIndex32
					}
				l33:
					if !_rules[ruleEND]() {
						goto l31
					}
					{

						t := _deftime()
						p.start = time.Date(p.year, t.Month(), t.Day(), p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l31:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleWeekday]() {
						goto l35
					}
					if buffer[position] != rune(',') {
						goto l35
					}
					position++
					if !_rules[ruleYear]() {
						goto l35
					}
					{
						position36, tokenIndex36 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l36
						}
						goto l37
					l36:
						position, tokenIndex = position36, tokenIndex36
					}
				l37:
					if !_rules[ruleEND]() {
						goto l35
					}
					{

						t := _deftime()
						day := MondayOf(t).Day() + p.wday
						p.start = time.Date(p.year, t.Month(), day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l35:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l39
					}
					if !_rules[ruleDay]() {
						goto l39
					}
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l40
						}
						goto l41
					l40:
						position, tokenIndex = position40, tokenIndex40
					}
				l41:
					if !_rules[ruleEND]() {
						goto l39
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), p.day, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l39:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleTime]() {
						goto l43
					}
					if buffer[position] != rune(',') {
						goto l43
					}
					position++
					if !_rules[ruleMonth]() {
						goto l43
					}
					if !_rules[ruleDay]() {
						goto l43
					}
					{
						position44, tokenIndex44 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l44
						}
						goto l45
					l44:
						position, tokenIndex = position44, tokenIndex44
					}
				l45:
					if !_rules[ruleEND]() {
						goto l43
					}
					{

						t := _deftime()
						p.start = time.Date(t.Year(), time.Month(p.month), p.day, p.hour, p.min, 0, 0, t.Location())

					}
					goto l2
				l43:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l47
					}
					if buffer[position] != rune(',') {
						goto l47
					}
					position++
					if !_rules[ruleYear]() {
						goto l47
					}
					{
						position48, tokenIndex48 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l48
						}
						goto l49
					l48:
						position, tokenIndex = position48, tokenIndex48
					}
				l49:
					if !_rules[ruleEND]() {
						goto l47
					}
					{

						t := _deftime()
						p.start = time.Date(p.year, time.Month(p.month), 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l47:
					position, tokenIndex = position2, tokenIndex2
					if !_rules[ruleMonth]() {
						goto l51
					}
					if !_rules[ruleDay]() {
						goto l51
					}
					if buffer[position] != rune(',') {
						goto l51
					}
					position++
					if !_rules[ruleYear]() {
						goto l51
					}
					{
						position52, tokenIndex52 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l52
						}
						goto l53
					l52:
						position, tokenIndex = position52, tokenIndex52
					}
				l53:
					if !_rules[ruleEND]() {
						goto l51
					}
					{

						t := _deftime()
						p.start = time.Date(p.year, time.Month(p.month), p.day, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l51:
					position, tokenIndex = position2, tokenIndex2
					{
						position56, tokenIndex56 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l57
						}
						position++
						if buffer[position] != rune('o') {
							goto l57
						}
						position++
						if buffer[position] != rune('d') {
							goto l57
						}
						position++
						if buffer[position] != rune('a') {
							goto l57
						}
						position++
						if buffer[position] != rune('y') {
							goto l57
						}
						position++
						goto l56
					l57:
						position, tokenIndex = position56, tokenIndex56
						if buffer[position] != rune('.') {
							goto l55
						}
						position++
						if buffer[position] != rune('d') {
							goto l55
						}
						position++
						{
							position58, tokenIndex58 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l58
							}
							position++
							if buffer[position] != rune('y') {
								goto l58
							}
							position++
							goto l59
						l58:
							position, tokenIndex = position58, tokenIndex58
						}
					l59:
					}
				l56:
					if !_rules[ruleOffset]() {
						goto l55
					}
					if !_rules[ruleEND]() {
						goto l55
					}
					{

						p.start = *Today()

					}
					goto l2
				l55:
					position, tokenIndex = position2, tokenIndex2
					{
						position62, tokenIndex62 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l63
						}
						position++
						if buffer[position] != rune('o') {
							goto l63
						}
						position++
						if buffer[position] != rune('d') {
							goto l63
						}
						position++
						if buffer[position] != rune('a') {
							goto l63
						}
						position++
						if buffer[position] != rune('y') {
							goto l63
						}
						position++
						goto l62
					l63:
						position, tokenIndex = position62, tokenIndex62
						if buffer[position] != rune('.') {
							goto l61
						}
						position++
						if buffer[position] != rune('d') {
							goto l61
						}
						position++
						{
							position64, tokenIndex64 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l64
							}
							position++
							if buffer[position] != rune('y') {
								goto l64
							}
							position++
							goto l65
						l64:
							position, tokenIndex = position64, tokenIndex64
						}
					l65:
					}
				l62:
					if !_rules[ruleEND]() {
						goto l61
					}
					{

						p.start = *Today()
						p.offset = DAY

					}
					goto l2
				l61:
					position, tokenIndex = position2, tokenIndex2
					{
						position68, tokenIndex68 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l69
						}
						position++
						if buffer[position] != rune('o') {
							goto l69
						}
						position++
						if buffer[position] != rune('m') {
							goto l69
						}
						position++
						{
							position70, tokenIndex70 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l70
							}
							position++
							if buffer[position] != rune('r') {
								goto l70
							}
							position++
							if buffer[position] != rune('r') {
								goto l70
							}
							position++
							if buffer[position] != rune('o') {
								goto l70
							}
							position++
							if buffer[position] != rune('w') {
								goto l70
							}
							position++
							goto l71
						l70:
							position, tokenIndex = position70, tokenIndex70
						}
					l71:
						goto l68
					l69:
						position, tokenIndex = position68, tokenIndex68
						if buffer[position] != rune('t') {
							goto l67
						}
						position++
					}
				l68:
					if !_rules[ruleOffset]() {
						goto l67
					}
					if !_rules[ruleEND]() {
						goto l67
					}
					{

						p.start = *Tomorrow()

					}
					goto l2
				l67:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('y') {
						goto l73
					}
					position++
					{
						position74, tokenIndex74 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l74
						}
						position++
						if buffer[position] != rune('s') {
							goto l74
						}
						position++
						if buffer[position] != rune('t') {
							goto l74
						}
						position++
						{
							position76, tokenIndex76 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l76
							}
							position++
							if buffer[position] != rune('r') {
								goto l76
							}
							position++
							if buffer[position] != rune('d') {
								goto l76
							}
							position++
							if buffer[position] != rune('a') {
								goto l76
							}
							position++
							if buffer[position] != rune('y') {
								goto l76
							}
							position++
							goto l77
						l76:
							position, tokenIndex = position76, tokenIndex76
						}
					l77:
						goto l75
					l74:
						position, tokenIndex = position74, tokenIndex74
					}
				l75:
					if !_rules[ruleOffset]() {
						goto l73
					}
					if !_rules[ruleEND]() {
						goto l73
					}
					{

						p.start = *Yesterday()

					}
					goto l2
				l73:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l79
					}
					position++
					{
						position80, tokenIndex80 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l80
						}
						position++
						{
							position82, tokenIndex82 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l82
							}
							position++
							if buffer[position] != rune('c') {
								goto l82
							}
							position++
							{
								position84, tokenIndex84 := position, tokenIndex
								if buffer[position] != rune('o') {
									goto l84
								}
								position++
								if buffer[position] != rune('n') {
									goto l84
								}
								position++
								if buffer[position] != rune('d') {
									goto l84
								}
								position++
								goto l85
							l84:
								position, tokenIndex = position84, tokenIndex84
							}
						l85:
							goto l83
						l82:
							position, tokenIndex = position82, tokenIndex82
						}
					l83:
						goto l81
					l80:
						position, tokenIndex = position80, tokenIndex80
					}
				l81:
					if !_rules[ruleOffset]() {
						goto l79
					}
					if !_rules[ruleEND]() {
						goto l79
					}
					{

						p.start = *_deftime()

					}
					goto l2
				l79:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l87
					}
					position++
					{
						position88, tokenIndex88 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l88
						}
						position++
						{
							position90, tokenIndex90 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l90
							}
							position++
							if buffer[position] != rune('c') {
								goto l90
							}
							position++
							{
								position92, tokenIndex92 := position, tokenIndex
								if buffer[position] != rune('o') {
									goto l92
								}
								position++
								if buffer[position] != rune('n') {
									goto l92
								}
								position++
								if buffer[position] != rune('d') {
									goto l92
								}
								position++
								goto l93
							l92:
								position, tokenIndex = position92, tokenIndex92
							}
						l93:
							goto l91
						l90:
							position, tokenIndex = position90, tokenIndex90
						}
					l91:
						goto l89
					l88:
						position, tokenIndex = position88, tokenIndex88
					}
				l89:
					if !_rules[ruleEND]() {
						goto l87
					}
					{

						p.start = *_deftime()
						p.stop = p.start

					}
					goto l2
				l87:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l95
					}
					position++
					{
						position96, tokenIndex96 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l96
						}
						position++
						{
							position98, tokenIndex98 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l98
							}
							position++
							if buffer[position] != rune('n') {
								goto l98
							}
							position++
							{
								position100, tokenIndex100 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l100
								}
								position++
								if buffer[position] != rune('t') {
									goto l100
								}
								position++
								if buffer[position] != rune('e') {
									goto l100
								}
								position++
								goto l101
							l100:
								position, tokenIndex = position100, tokenIndex100
							}
						l101:
							goto l99
						l98:
							position, tokenIndex = position98, tokenIndex98
						}
					l99:
						goto l97
					l96:
						position, tokenIndex = position96, tokenIndex96
					}
				l97:
					if !_rules[ruleOffset]() {
						goto l95
					}
					if !_rules[ruleEND]() {
						goto l95
					}
					{

						p.start = *MinuteOf(_deftime())

					}
					goto l2
				l95:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l103
					}
					position++
					{
						position104, tokenIndex104 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l104
						}
						position++
						{
							position106, tokenIndex106 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l106
							}
							position++
							if buffer[position] != rune('n') {
								goto l106
							}
							position++
							{
								position108, tokenIndex108 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l108
								}
								position++
								if buffer[position] != rune('t') {
									goto l108
								}
								position++
								if buffer[position] != rune('e') {
									goto l108
								}
								position++
								goto l109
							l108:
								position, tokenIndex = position108, tokenIndex108
							}
						l109:
							goto l107
						l106:
							position, tokenIndex = position106, tokenIndex106
						}
					l107:
						goto l105
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
				l105:
					if !_rules[ruleEND]() {
						goto l103
					}
					{

						p.start = *MinuteOf(_deftime())
						p.offset = MINUTE

					}
					goto l2
				l103:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l111
					}
					position++
					if buffer[position] != rune('h') {
						goto l111
					}
					position++
					{
						position112, tokenIndex112 := position, tokenIndex
						{
							position114, tokenIndex114 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l115
							}
							position++
							goto l114
						l115:
							position, tokenIndex = position114, tokenIndex114
							if buffer[position] != rune('o') {
								goto l112
							}
							position++
							if buffer[position] != rune('u') {
								goto l112
							}
							position++
							if buffer[position] != rune('r') {
								goto l112
							}
							position++
						}
					l114:
						goto l113
					l112:
						position, tokenIndex = position112, tokenIndex112
					}
				l113:
					if !_rules[ruleOffset]() {
						goto l111
					}
					if !_rules[ruleEND]() {
						goto l111
					}
					{

						p.start = *HourOf(_deftime())

					}
					goto l2
				l111:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l117
					}
					position++
					if buffer[position] != rune('h') {
						goto l117
					}
					position++
					{
						position118, tokenIndex118 := position, tokenIndex
						{
							position120, tokenIndex120 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l121
							}
							position++
							goto l120
						l121:
							position, tokenIndex = position120, tokenIndex120
							if buffer[position] != rune('o') {
								goto l118
							}
							position++
							if buffer[position] != rune('u') {
								goto l118
							}
							position++
							if buffer[position] != rune('r') {
								goto l118
							}
							position++
						}
					l120:
						goto l119
					l118:
						position, tokenIndex = position118, tokenIndex118
					}
				l119:
					if !_rules[ruleEND]() {
						goto l117
					}
					{

						p.start = *HourOf(_deftime())
						p.offset = HOUR

					}
					goto l2
				l117:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l123
					}
					position++
					if buffer[position] != rune('w') {
						goto l123
					}
					position++
					{
						position124, tokenIndex124 := position, tokenIndex
						{
							position126, tokenIndex126 := position, tokenIndex
							if buffer[position] != rune('k') {
								goto l127
							}
							position++
							goto l126
						l127:
							position, tokenIndex = position126, tokenIndex126
							if buffer[position] != rune('e') {
								goto l124
							}
							position++
							if buffer[position] != rune('e') {
								goto l124
							}
							position++
							if buffer[position] != rune('k') {
								goto l124
							}
							position++
						}
					l126:
						goto l125
					l124:
						position, tokenIndex = position124, tokenIndex124
					}
				l125:
					if !_rules[ruleOffset]() {
						goto l123
					}
					if !_rules[ruleEND]() {
						goto l123
					}
					{

						p.start = *WeekOf(_deftime())

					}
					goto l2
				l123:
					position, tokenIndex = position2, tokenIndex2
					if buffer[position] != rune('.') {
						goto l129
					}
					position++
					if buffer[position] != rune('w') {
						goto l129
					}
					position++
					{
						position130, tokenIndex130 := position, tokenIndex
						{
							position132, tokenIndex132 := position, tokenIndex
							if buffer[position] != rune('k') {
								goto l133
							}
							position++
							goto l132
						l133:
							position, tokenIndex = position132, tokenIndex132
							if buffer[position] != rune('e') {
								goto l130
							}
							position++
							if buffer[position] != rune('e') {
								goto l130
							}
							position++
							if buffer[position] != rune('k') {
								goto l130
							}
							position++
						}
					l132:
						goto l131
					l130:
						position, tokenIndex = position130, tokenIndex130
					}
				l131:
					if !_rules[ruleEND]() {
						goto l129
					}
					{

						p.start = *WeekOf(_deftime())
						p.offset = WEEK

					}
					goto l2
				l129:
					position, tokenIndex = position2, tokenIndex2
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l137
						}
						position++
						if buffer[position] != rune('M') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('.') {
							goto l135
						}
						position++
						if buffer[position] != rune('m') {
							goto l135
						}
						position++
						if buffer[position] != rune('o') {
							goto l135
						}
						position++
						if buffer[position] != rune('n') {
							goto l135
						}
						position++
						if buffer[position] != rune('t') {
							goto l135
						}
						position++
						if buffer[position] != rune('h') {
							goto l135
						}
						position++
					}
				l136:
					if !_rules[ruleOffset]() {
						goto l135
					}
					if !_rules[ruleEND]() {
						goto l135
					}
					{

						p.start = *MonthOf(_deftime())

					}
					goto l2
				l135:
					position, tokenIndex = position2, tokenIndex2
					{
						position140, tokenIndex140 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l141
						}
						position++
						if buffer[position] != rune('M') {
							goto l141
						}
						position++
						goto l140
					l141:
						position, tokenIndex = position140, tokenIndex140
						if buffer[position] != rune('.') {
							goto l139
						}
						position++
						if buffer[position] != rune('m') {
							goto l139
						}
						position++
						if buffer[position] != rune('o') {
							goto l139
						}
						position++
						if buffer[position] != rune('n') {
							goto l139
						}
						position++
						if buffer[position] != rune('t') {
							goto l139
						}
						position++
						if buffer[position] != rune('h') {
							goto l139
						}
						position++
					}
				l140:
					if !_rules[ruleEND]() {
						goto l139
					}
					{

						t := _deftime()
						p.start = *MonthOf(t)
						nm := t.Month() + 1
						p.stop = time.Date(t.Year(), nm, 1, 0, 0, 0, 0, t.Location())

					}
					goto l2
				l139:
					position, tokenIndex = position2, tokenIndex2
					{
						position144, tokenIndex144 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l145
						}
						position++
						if buffer[position] != rune('y') {
							goto l145
						}
						position++
						if buffer[position] != rune('e') {
							goto l145
						}
						position++
						if buffer[position] != rune('a') {
							goto l145
						}
						position++
						if buffer[position] != rune('r') {
							goto l145
						}
						position++
						goto l144
					l145:
						position, tokenIndex = position144, tokenIndex144
						if buffer[position] != rune('.') {
							goto l146
						}
						position++
						if buffer[position] != rune('y') {
							goto l146
						}
						position++
						if buffer[position] != rune('r') {
							goto l146
						}
						position++
						goto l144
					l146:
						position, tokenIndex = position144, tokenIndex144
						if buffer[position] != rune('.') {
							goto l143
						}
						position++
						if buffer[position] != rune('y') {
							goto l143
						}
						position++
					}
				l144:
					if !_rules[ruleOffset]() {
						goto l143
					}
					if !_rules[ruleEND]() {
						goto l143
					}
					{

						p.start = *YearOf(_deftime())

					}
					goto l2
				l143:
					position, tokenIndex = position2, tokenIndex2
					{
						switch buffer[position] {
						case '.':
							{
								position149, tokenIndex149 := position, tokenIndex
								if buffer[position] != rune('.') {
									goto l150
								}
								position++
								if buffer[position] != rune('y') {
									goto l150
								}
								position++
								if buffer[position] != rune('e') {
									goto l150
								}
								position++
								if buffer[position] != rune('a') {
									goto l150
								}
								position++
								if buffer[position] != rune('r') {
									goto l150
								}
								position++
								goto l149
							l150:
								position, tokenIndex = position149, tokenIndex149
								if buffer[position] != rune('.') {
									goto l151
								}
								position++
								if buffer[position] != rune('y') {
									goto l151
								}
								position++
								if buffer[position] != rune('r') {
									goto l151
								}
								position++
								goto l149
							l151:
								position, tokenIndex = position149, tokenIndex149
								if buffer[position] != rune('.') {
									goto l0
								}
								position++
								if buffer[position] != rune('y') {
									goto l0
								}
								position++
							}
						l149:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = *YearOf(t)
								ny := t.Year() + 1
								p.stop = time.Date(ny, 1, 1, 0, 0, 0, 0, t.Location())

							}
						case 'y':
							if buffer[position] != rune('y') {
								goto l0
							}
							position++
							{
								position153, tokenIndex153 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l153
								}
								position++
								if buffer[position] != rune('s') {
									goto l153
								}
								position++
								if buffer[position] != rune('t') {
									goto l153
								}
								position++
								{
									position155, tokenIndex155 := position, tokenIndex
									if buffer[position] != rune('e') {
										goto l155
									}
									position++
									if buffer[position] != rune('r') {
										goto l155
									}
									position++
									if buffer[position] != rune('d') {
										goto l155
									}
									position++
									if buffer[position] != rune('a') {
										goto l155
									}
									position++
									if buffer[position] != rune('y') {
										goto l155
									}
									position++
									goto l156
								l155:
									position, tokenIndex = position155, tokenIndex155
								}
							l156:
								goto l154
							l153:
								position, tokenIndex = position153, tokenIndex153
							}
						l154:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								p.start = *Yesterday()
								p.offset = DAY
								p.offdir = -1

							}
						case 't':
							{
								position158, tokenIndex158 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l159
								}
								position++
								if buffer[position] != rune('o') {
									goto l159
								}
								position++
								if buffer[position] != rune('m') {
									goto l159
								}
								position++
								{
									position160, tokenIndex160 := position, tokenIndex
									if buffer[position] != rune('o') {
										goto l160
									}
									position++
									if buffer[position] != rune('r') {
										goto l160
									}
									position++
									if buffer[position] != rune('r') {
										goto l160
									}
									position++
									if buffer[position] != rune('o') {
										goto l160
									}
									position++
									if buffer[position] != rune('w') {
										goto l160
									}
									position++
									goto l161
								l160:
									position, tokenIndex = position160, tokenIndex160
								}
							l161:
								goto l158
							l159:
								position, tokenIndex = position158, tokenIndex158
								if buffer[position] != rune('t') {
									goto l0
								}
								position++
							}
						l158:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								p.start = *Tomorrow()
								p.offset = DAY

							}
						case 'n':
							if buffer[position] != rune('n') {
								goto l0
							}
							position++
							if buffer[position] != rune('o') {
								goto l0
							}
							position++
							if buffer[position] != rune('w') {
								goto l0
							}
							position++
							{
								position163, tokenIndex163 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l163
								}
								goto l164
							l163:
								position, tokenIndex = position163, tokenIndex163
							}
						l164:
							if !_rules[ruleEND]() {
								goto l0
							}
							{
								p.start = *_deftime()
							}
						case ',':
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleYear]() {
								goto l0
							}
							{
								position166, tokenIndex166 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l166
								}
								goto l167
							l166:
								position, tokenIndex = position166, tokenIndex166
							}
						l167:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = time.Date(p.year, 1, 1, 0, 0, 0, 0, t.Location())

							}
						case '+', '-':
							if !_rules[ruleOffset]() {
								goto l0
							}
							{
								p.start = *_deftime()
							}
						default:
							if !_rules[ruleTime]() {
								goto l0
							}
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleMonth]() {
								goto l0
							}
							if !_rules[ruleDay]() {
								goto l0
							}
							if buffer[position] != rune(',') {
								goto l0
							}
							position++
							if !_rules[ruleYear]() {
								goto l0
							}
							{
								position170, tokenIndex170 := position, tokenIndex
								if !_rules[ruleOffset]() {
									goto l170
								}
								goto l171
							l170:
								position, tokenIndex = position170, tokenIndex170
							}
						l171:
							if !_rules[ruleEND]() {
								goto l0
							}
							{

								t := _deftime()
								p.start = time.Date(p.year, time.Month(p.month), p.day, p.hour, p.min, 0, 0, t.Location())

							}
						}
					}

				}
			l2:
				add(ruleDTime, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Weekday <- <(('t' 'u' 'e' ('s' 'd' 'a' 'y')? Action36) / ('s' 'a' 't' ('u' 'r' 'd' 'a' 'y')? Action40) / ((&('s') ('s' 'u' 'n' ('d' 'a' 'y')? Action41)) | (&('f') ('f' 'r' 'i' ('d' 'a' 'y')? Action39)) | (&('t') ('t' 'h' 'u' ('r' 's' 'd' 'a' 'y')? Action38)) | (&('w') ('w' 'e' 'd' ('n' 'e' 's' 'd' 'a' 'y')? Action37)) | (&('m') ('m' 'o' 'n' ('d' 'a' 'y')? Action35))))> */
		func() bool {
			position173, tokenIndex173 := position, tokenIndex
			{
				position174 := position
				{
					position175, tokenIndex175 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l176
					}
					position++
					if buffer[position] != rune('u') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					{
						position177, tokenIndex177 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l177
						}
						position++
						if buffer[position] != rune('d') {
							goto l177
						}
						position++
						if buffer[position] != rune('a') {
							goto l177
						}
						position++
						if buffer[position] != rune('y') {
							goto l177
						}
						position++
						goto l178
					l177:
						position, tokenIndex = position177, tokenIndex177
					}
				l178:
					{
						p.wday = 1
					}
					goto l175
				l176:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('t') {
						goto l180
					}
					position++
					{
						position181, tokenIndex181 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l181
						}
						position++
						if buffer[position] != rune('r') {
							goto l181
						}
						position++
						if buffer[position] != rune('d') {
							goto l181
						}
						position++
						if buffer[position] != rune('a') {
							goto l181
						}
						position++
						if buffer[position] != rune('y') {
							goto l181
						}
						position++
						goto l182
					l181:
						position, tokenIndex = position181, tokenIndex181
					}
				l182:
					{
						p.wday = 5
					}
					goto l175
				l180:
					position, tokenIndex = position175, tokenIndex175
					{
						switch buffer[position] {
						case 's':
							if buffer[position] != rune('s') {
								goto l173
							}
							position++
							if buffer[position] != rune('u') {
								goto l173
							}
							position++
							if buffer[position] != rune('n') {
								goto l173
							}
							position++
							{
								position185, tokenIndex185 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l185
								}
								position++
								if buffer[position] != rune('a') {
									goto l185
								}
								position++
								if buffer[position] != rune('y') {
									goto l185
								}
								position++
								goto l186
							l185:
								position, tokenIndex = position185, tokenIndex185
							}
						l186:
							{
								p.wday = 6
							}
						case 'f':
							if buffer[position] != rune('f') {
								goto l173
							}
							position++
							if buffer[position] != rune('r') {
								goto l173
							}
							position++
							if buffer[position] != rune('i') {
								goto l173
							}
							position++
							{
								position188, tokenIndex188 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l188
								}
								position++
								if buffer[position] != rune('a') {
									goto l188
								}
								position++
								if buffer[position] != rune('y') {
									goto l188
								}
								position++
								goto l189
							l188:
								position, tokenIndex = position188, tokenIndex188
							}
						l189:
							{
								p.wday = 4
							}
						case 't':
							if buffer[position] != rune('t') {
								goto l173
							}
							position++
							if buffer[position] != rune('h') {
								goto l173
							}
							position++
							if buffer[position] != rune('u') {
								goto l173
							}
							position++
							{
								position191, tokenIndex191 := position, tokenIndex
								if buffer[position] != rune('r') {
									goto l191
								}
								position++
								if buffer[position] != rune('s') {
									goto l191
								}
								position++
								if buffer[position] != rune('d') {
									goto l191
								}
								position++
								if buffer[position] != rune('a') {
									goto l191
								}
								position++
								if buffer[position] != rune('y') {
									goto l191
								}
								position++
								goto l192
							l191:
								position, tokenIndex = position191, tokenIndex191
							}
						l192:
							{
								p.wday = 3
							}
						case 'w':
							if buffer[position] != rune('w') {
								goto l173
							}
							position++
							if buffer[position] != rune('e') {
								goto l173
							}
							position++
							if buffer[position] != rune('d') {
								goto l173
							}
							position++
							{
								position194, tokenIndex194 := position, tokenIndex
								if buffer[position] != rune('n') {
									goto l194
								}
								position++
								if buffer[position] != rune('e') {
									goto l194
								}
								position++
								if buffer[position] != rune('s') {
									goto l194
								}
								position++
								if buffer[position] != rune('d') {
									goto l194
								}
								position++
								if buffer[position] != rune('a') {
									goto l194
								}
								position++
								if buffer[position] != rune('y') {
									goto l194
								}
								position++
								goto l195
							l194:
								position, tokenIndex = position194, tokenIndex194
							}
						l195:
							{
								p.wday = 2
							}
						default:
							if buffer[position] != rune('m') {
								goto l173
							}
							position++
							if buffer[position] != rune('o') {
								goto l173
							}
							position++
							if buffer[position] != rune('n') {
								goto l173
							}
							position++
							{
								position197, tokenIndex197 := position, tokenIndex
								if buffer[position] != rune('d') {
									goto l197
								}
								position++
								if buffer[position] != rune('a') {
									goto l197
								}
								position++
								if buffer[position] != rune('y') {
									goto l197
								}
								position++
								goto l198
							l197:
								position, tokenIndex = position197, tokenIndex197
							}
						l198:
							{
								p.wday = 0
							}
						}
					}

				}
			l175:
				add(ruleWeekday, position174)
			}
			return true
		l173:
			position, tokenIndex = position173, tokenIndex173
			return false
		},
		/* 2 Month <- <(('j' 'a' 'n' ('u' 'a' 'r' 'y')? Action42) / ('m' 'a' 'r' ('c' 'h')? Action44) / ('a' 'p' 'r' ('r' 'i' 'l')? Action45) / ('j' 'u' 'n' 'e'? Action47) / ((&('d') ('d' 'e' 'c' ('e' 'm' 'b' 'e' 'r')? Action53)) | (&('n') ('n' 'o' 'v' ('e' 'm' 'b' 'e' 'r')? Action52)) | (&('o') ('o' 'c' 't' ('t' 'o' 'b' 'e' 'r')? Action51)) | (&('s') ('s' 'e' 'p' ('t' 'e' 'm' 'b' 'e' 'r')? Action50)) | (&('a') ('a' 'u' 'g' ('u' 's' 't')? Action49)) | (&('j') ('j' 'u' 'l' 'y'? Action48)) | (&('m') ('m' 'a' 'y' Action46)) | (&('f') ('f' 'e' 'b' ('r' 'u' 'a' 'r' 'y')? Action43))))> */
		func() bool {
			position200, tokenIndex200 := position, tokenIndex
			{
				position201 := position
				{
					position202, tokenIndex202 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l203
					}
					position++
					if buffer[position] != rune('a') {
						goto l203
					}
					position++
					if buffer[position] != rune('n') {
						goto l203
					}
					position++
					{
						position204, tokenIndex204 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l204
						}
						position++
						if buffer[position] != rune('a') {
							goto l204
						}
						position++
						if buffer[position] != rune('r') {
							goto l204
						}
						position++
						if buffer[position] != rune('y') {
							goto l204
						}
						position++
						goto l205
					l204:
						position, tokenIndex = position204, tokenIndex204
					}
				l205:
					{
						p.month = 1
					}
					goto l202
				l203:
					position, tokenIndex = position202, tokenIndex202
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					if buffer[position] != rune('a') {
						goto l207
					}
					position++
					if buffer[position] != rune('r') {
						goto l207
					}
					position++
					{
						position208, tokenIndex208 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l208
						}
						position++
						if buffer[position] != rune('h') {
							goto l208
						}
						position++
						goto l209
					l208:
						position, tokenIndex = position208, tokenIndex208
					}
				l209:
					{
						p.month = 3
					}
					goto l202
				l207:
					position, tokenIndex = position202, tokenIndex202
					if buffer[position] != rune('a') {
						goto l211
					}
					position++
					if buffer[position] != rune('p') {
						goto l211
					}
					position++
					if buffer[position] != rune('r') {
						goto l211
					}
					position++
					{
						position212, tokenIndex212 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l212
						}
						position++
						if buffer[position] != rune('i') {
							goto l212
						}
						position++
						if buffer[position] != rune('l') {
							goto l212
						}
						position++
						goto l213
					l212:
						position, tokenIndex = position212, tokenIndex212
					}
				l213:
					{
						p.month = 4
					}
					goto l202
				l211:
					position, tokenIndex = position202, tokenIndex202
					if buffer[position] != rune('j') {
						goto l215
					}
					position++
					if buffer[position] != rune('u') {
						goto l215
					}
					position++
					if buffer[position] != rune('n') {
						goto l215
					}
					position++
					{
						position216, tokenIndex216 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l216
						}
						position++
						goto l217
					l216:
						position, tokenIndex = position216, tokenIndex216
					}
				l217:
					{
						p.month = 6
					}
					goto l202
				l215:
					position, tokenIndex = position202, tokenIndex202
					{
						switch buffer[position] {
						case 'd':
							if buffer[position] != rune('d') {
								goto l200
							}
							position++
							if buffer[position] != rune('e') {
								goto l200
							}
							position++
							if buffer[position] != rune('c') {
								goto l200
							}
							position++
							{
								position220, tokenIndex220 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l220
								}
								position++
								if buffer[position] != rune('m') {
									goto l220
								}
								position++
								if buffer[position] != rune('b') {
									goto l220
								}
								position++
								if buffer[position] != rune('e') {
									goto l220
								}
								position++
								if buffer[position] != rune('r') {
									goto l220
								}
								position++
								goto l221
							l220:
								position, tokenIndex = position220, tokenIndex220
							}
						l221:
							{
								p.month = 12
							}
						case 'n':
							if buffer[position] != rune('n') {
								goto l200
							}
							position++
							if buffer[position] != rune('o') {
								goto l200
							}
							position++
							if buffer[position] != rune('v') {
								goto l200
							}
							position++
							{
								position223, tokenIndex223 := position, tokenIndex
								if buffer[position] != rune('e') {
									goto l223
								}
								position++
								if buffer[position] != rune('m') {
									goto l223
								}
								position++
								if buffer[position] != rune('b') {
									goto l223
								}
								position++
								if buffer[position] != rune('e') {
									goto l223
								}
								position++
								if buffer[position] != rune('r') {
									goto l223
								}
								position++
								goto l224
							l223:
								position, tokenIndex = position223, tokenIndex223
							}
						l224:
							{
								p.month = 11
							}
						case 'o':
							if buffer[position] != rune('o') {
								goto l200
							}
							position++
							if buffer[position] != rune('c') {
								goto l200
							}
							position++
							if buffer[position] != rune('t') {
								goto l200
							}
							position++
							{
								position226, tokenIndex226 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l226
								}
								position++
								if buffer[position] != rune('o') {
									goto l226
								}
								position++
								if buffer[position] != rune('b') {
									goto l226
								}
								position++
								if buffer[position] != rune('e') {
									goto l226
								}
								position++
								if buffer[position] != rune('r') {
									goto l226
								}
								position++
								goto l227
							l226:
								position, tokenIndex = position226, tokenIndex226
							}
						l227:
							{
								p.month = 10
							}
						case 's':
							if buffer[position] != rune('s') {
								goto l200
							}
							position++
							if buffer[position] != rune('e') {
								goto l200
							}
							position++
							if buffer[position] != rune('p') {
								goto l200
							}
							position++
							{
								position229, tokenIndex229 := position, tokenIndex
								if buffer[position] != rune('t') {
									goto l229
								}
								position++
								if buffer[position] != rune('e') {
									goto l229
								}
								position++
								if buffer[position] != rune('m') {
									goto l229
								}
								position++
								if buffer[position] != rune('b') {
									goto l229
								}
								position++
								if buffer[position] != rune('e') {
									goto l229
								}
								position++
								if buffer[position] != rune('r') {
									goto l229
								}
								position++
								goto l230
							l229:
								position, tokenIndex = position229, tokenIndex229
							}
						l230:
							{
								p.month = 9
							}
						case 'a':
							if buffer[position] != rune('a') {
								goto l200
							}
							position++
							if buffer[position] != rune('u') {
								goto l200
							}
							position++
							if buffer[position] != rune('g') {
								goto l200
							}
							position++
							{
								position232, tokenIndex232 := position, tokenIndex
								if buffer[position] != rune('u') {
									goto l232
								}
								position++
								if buffer[position] != rune('s') {
									goto l232
								}
								position++
								if buffer[position] != rune('t') {
									goto l232
								}
								position++
								goto l233
							l232:
								position, tokenIndex = position232, tokenIndex232
							}
						l233:
							{
								p.month = 8
							}
						case 'j':
							if buffer[position] != rune('j') {
								goto l200
							}
							position++
							if buffer[position] != rune('u') {
								goto l200
							}
							position++
							if buffer[position] != rune('l') {
								goto l200
							}
							position++
							{
								position235, tokenIndex235 := position, tokenIndex
								if buffer[position] != rune('y') {
									goto l235
								}
								position++
								goto l236
							l235:
								position, tokenIndex = position235, tokenIndex235
							}
						l236:
							{
								p.month = 7
							}
						case 'm':
							if buffer[position] != rune('m') {
								goto l200
							}
							position++
							if buffer[position] != rune('a') {
								goto l200
							}
							position++
							if buffer[position] != rune('y') {
								goto l200
							}
							position++
							{
								p.month = 5
							}
						default:
							if buffer[position] != rune('f') {
								goto l200
							}
							position++
							if buffer[position] != rune('e') {
								goto l200
							}
							position++
							if buffer[position] != rune('b') {
								goto l200
							}
							position++
							{
								position239, tokenIndex239 := position, tokenIndex
								if buffer[position] != rune('r') {
									goto l239
								}
								position++
								if buffer[position] != rune('u') {
									goto l239
								}
								position++
								if buffer[position] != rune('a') {
									goto l239
								}
								position++
								if buffer[position] != rune('r') {
									goto l239
								}
								position++
								if buffer[position] != rune('y') {
									goto l239
								}
								position++
								goto l240
							l239:
								position, tokenIndex = position239, tokenIndex239
							}
						l240:
							{
								p.month = 2
							}
						}
					}

				}
			l202:
				add(ruleMonth, position201)
			}
			return true
		l200:
			position, tokenIndex = position200, tokenIndex200
			return false
		},
		/* 3 Day <- <((<([1-9] ![0-9])> / ((&('3') <('3' [0-1])>) | (&('2') <('2' [0-9])>) | (&('1') <('1' [0-9])>))) Action54)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				{
					position244, tokenIndex244 := position, tokenIndex
					{
						position246 := position
						if c := buffer[position]; c < rune('1') || c > rune('9') {
							goto l245
						}
						position++
						{
							position247, tokenIndex247 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l247
							}
							position++
							goto l245
						l247:
							position, tokenIndex = position247, tokenIndex247
						}
						begin := position246
						end := position
						text = string(buffer[begin:end])
					}
					goto l244
				l245:
					position, tokenIndex = position244, tokenIndex244
					{
						switch buffer[position] {
						case '3':
							{
								position249 := position
								if buffer[position] != rune('3') {
									goto l242
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('1') {
									goto l242
								}
								position++
								begin := position249
								end := position
								text = string(buffer[begin:end])
							}
						case '2':
							{
								position250 := position
								if buffer[position] != rune('2') {
									goto l242
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l242
								}
								position++
								begin := position250
								end := position
								text = string(buffer[begin:end])
							}
						default:
							{
								position251 := position
								if buffer[position] != rune('1') {
									goto l242
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l242
								}
								position++
								begin := position251
								end := position
								text = string(buffer[begin:end])
							}
						}
					}

				}
			l244:
				{

					i, _ := strconv.Atoi(text)
					p.day = i

				}
				add(ruleDay, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 4 Time <- <(('1' '2' ('p' / 'P') ('m' / 'M')? Action55) / ('1' '2' ('a' / 'A') ('m' / 'M')? Action56) / (Hour12 Minute AmPm) / (Hour12 AmPm) / (Hour Minute !AmPm) / (Hour !AmPm))> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l256
					}
					position++
					if buffer[position] != rune('2') {
						goto l256
					}
					position++
					{
						position257, tokenIndex257 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l258
						}
						position++
						goto l257
					l258:
						position, tokenIndex = position257, tokenIndex257
						if buffer[position] != rune('P') {
							goto l256
						}
						position++
					}
				l257:
					{
						position259, tokenIndex259 := position, tokenIndex
						{
							position261, tokenIndex261 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l262
							}
							position++
							goto l261
						l262:
							position, tokenIndex = position261, tokenIndex261
							if buffer[position] != rune('M') {
								goto l259
							}
							position++
						}
					l261:
						goto l260
					l259:
						position, tokenIndex = position259, tokenIndex259
					}
				l260:
					{
						p.hour = 12
					}
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('1') {
						goto l264
					}
					position++
					if buffer[position] != rune('2') {
						goto l264
					}
					position++
					{
						position265, tokenIndex265 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l266
						}
						position++
						goto l265
					l266:
						position, tokenIndex = position265, tokenIndex265
						if buffer[position] != rune('A') {
							goto l264
						}
						position++
					}
				l265:
					{
						position267, tokenIndex267 := position, tokenIndex
						{
							position269, tokenIndex269 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l270
							}
							position++
							goto l269
						l270:
							position, tokenIndex = position269, tokenIndex269
							if buffer[position] != rune('M') {
								goto l267
							}
							position++
						}
					l269:
						goto l268
					l267:
						position, tokenIndex = position267, tokenIndex267
					}
				l268:
					{
						p.hour = 0
					}
					goto l255
				l264:
					position, tokenIndex = position255, tokenIndex255
					if !_rules[ruleHour12]() {
						goto l272
					}
					if !_rules[ruleMinute]() {
						goto l272
					}
					if !_rules[ruleAmPm]() {
						goto l272
					}
					goto l255
				l272:
					position, tokenIndex = position255, tokenIndex255
					if !_rules[ruleHour12]() {
						goto l273
					}
					if !_rules[ruleAmPm]() {
						goto l273
					}
					goto l255
				l273:
					position, tokenIndex = position255, tokenIndex255
					if !_rules[ruleHour]() {
						goto l274
					}
					if !_rules[ruleMinute]() {
						goto l274
					}
					{
						position275, tokenIndex275 := position, tokenIndex
						if !_rules[ruleAmPm]() {
							goto l275
						}
						goto l274
					l275:
						position, tokenIndex = position275, tokenIndex275
					}
					goto l255
				l274:
					position, tokenIndex = position255, tokenIndex255
					if !_rules[ruleHour]() {
						goto l253
					}
					{
						position276, tokenIndex276 := position, tokenIndex
						if !_rules[ruleAmPm]() {
							goto l276
						}
						goto l253
					l276:
						position, tokenIndex = position276, tokenIndex276
					}
				}
			l255:
				add(ruleTime, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 5 Hour <- <((<([0-1] [0-9])> / <('2' [0-3])> / <[0-9]>) Action57)> */
		func() bool {
			position277, tokenIndex277 := position, tokenIndex
			{
				position278 := position
				{
					position279, tokenIndex279 := position, tokenIndex
					{
						position281 := position
						if c := buffer[position]; c < rune('0') || c > rune('1') {
							goto l280
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l280
						}
						position++
						begin := position281
						end := position
						text = string(buffer[begin:end])
					}
					goto l279
				l280:
					position, tokenIndex = position279, tokenIndex279
					{
						position283 := position
						if buffer[position] != rune('2') {
							goto l282
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('3') {
							goto l282
						}
						position++
						begin := position283
						end := position
						text = string(buffer[begin:end])
					}
					goto l279
				l282:
					position, tokenIndex = position279, tokenIndex279
					{
						position284 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l277
						}
						position++
						begin := position284
						end := position
						text = string(buffer[begin:end])
					}
				}
			l279:
				{

					i, _ := strconv.Atoi(text)
					p.hour = i

				}
				add(ruleHour, position278)
			}
			return true
		l277:
			position, tokenIndex = position277, tokenIndex277
			return false
		},
		/* 6 Hour12 <- <((<('1' [0-2])> / <[1-9]>) Action58)> */
		func() bool {
			position286, tokenIndex286 := position, tokenIndex
			{
				position287 := position
				{
					position288, tokenIndex288 := position, tokenIndex
					{
						position290 := position
						if buffer[position] != rune('1') {
							goto l289
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('2') {
							goto l289
						}
						position++
						begin := position290
						end := position
						text = string(buffer[begin:end])
					}
					goto l288
				l289:
					position, tokenIndex = position288, tokenIndex288
					{
						position291 := position
						if c := buffer[position]; c < rune('1') || c > rune('9') {
							goto l286
						}
						position++
						begin := position291
						end := position
						text = string(buffer[begin:end])
					}
				}
			l288:
				{

					i, _ := strconv.Atoi(text)
					p.hour = i

				}
				add(ruleHour12, position287)
			}
			return true
		l286:
			position, tokenIndex = position286, tokenIndex286
			return false
		},
		/* 7 AmPm <- <(('a' 'm'?) / ('p' 'm'? Action59))> */
		func() bool {
			position293, tokenIndex293 := position, tokenIndex
			{
				position294 := position
				{
					position295, tokenIndex295 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l296
					}
					position++
					{
						position297, tokenIndex297 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l297
						}
						position++
						goto l298
					l297:
						position, tokenIndex = position297, tokenIndex297
					}
				l298:
					goto l295
				l296:
					position, tokenIndex = position295, tokenIndex295
					if buffer[position] != rune('p') {
						goto l293
					}
					position++
					{
						position299, tokenIndex299 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l299
						}
						position++
						goto l300
					l299:
						position, tokenIndex = position299, tokenIndex299
					}
				l300:
					{
						p.hour += 12
					}
				}
			l295:
				add(ruleAmPm, position294)
			}
			return true
		l293:
			position, tokenIndex = position293, tokenIndex293
			return false
		},
		/* 8 Minute <- <(<([0-5] [0-9])> Action60)> */
		func() bool {
			position302, tokenIndex302 := position, tokenIndex
			{
				position303 := position
				{
					position304 := position
					if c := buffer[position]; c < rune('0') || c > rune('5') {
						goto l302
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l302
					}
					position++
					begin := position304
					end := position
					text = string(buffer[begin:end])
				}
				{

					i, _ := strconv.Atoi(text)
					p.min = i

				}
				add(ruleMinute, position303)
			}
			return true
		l302:
			position, tokenIndex = position302, tokenIndex302
			return false
		},
		/* 9 Year <- <(<([1-9] [0-9]*)> Action61)> */
		func() bool {
			position306, tokenIndex306 := position, tokenIndex
			{
				position307 := position
				{
					position308 := position
					if c := buffer[position]; c < rune('1') || c > rune('9') {
						goto l306
					}
					position++
				l309:
					{
						position310, tokenIndex310 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l310
						}
						position++
						goto l309
					l310:
						position, tokenIndex = position310, tokenIndex310
					}
					begin := position308
					end := position
					text = string(buffer[begin:end])
				}
				{

					i, _ := strconv.Atoi(text)
					p.year = i

				}
				add(ruleYear, position307)
			}
			return true
		l306:
			position, tokenIndex = position306, tokenIndex306
			return false
		},
		/* 10 Offset <- <(<(OffDir (OffYear / OffWeek / OffDay / OffHour / OffMinute / OffSecond)+)> Action62)> */
		func() bool {
			position312, tokenIndex312 := position, tokenIndex
			{
				position313 := position
				{
					position314 := position
					{
						position315 := position
						{
							position316, tokenIndex316 := position, tokenIndex
							if buffer[position] != rune('+') {
								goto l317
							}
							position++
							{
								p.offdir = 1
							}
							goto l316
						l317:
							position, tokenIndex = position316, tokenIndex316
							if buffer[position] != rune('-') {
								goto l312
							}
							position++
							{
								p.offdir = -1
							}
						}
					l316:
						add(ruleOffDir, position315)
					}
					{
						position322, tokenIndex322 := position, tokenIndex
						{
							position324 := position
							if !_rules[ruleFLOAT]() {
								goto l323
							}
							if buffer[position] != rune('y') {
								goto l323
							}
							position++
							{
								p.offset += p._float * YEAR
							}
							add(ruleOffYear, position324)
						}
						goto l322
					l323:
						position, tokenIndex = position322, tokenIndex322
						{
							position327 := position
							if !_rules[ruleFLOAT]() {
								goto l326
							}
							if buffer[position] != rune('w') {
								goto l326
							}
							position++
							{
								p.offset += p._float * WEEK
							}
							add(ruleOffWeek, position327)
						}
						goto l322
					l326:
						position, tokenIndex = position322, tokenIndex322
						{
							position330 := position
							if !_rules[ruleFLOAT]() {
								goto l329
							}
							if buffer[position] != rune('d') {
								goto l329
							}
							position++
							{
								p.offset += p._float * DAY
							}
							add(ruleOffDay, position330)
						}
						goto l322
					l329:
						position, tokenIndex = position322, tokenIndex322
						{
							position333 := position
							if !_rules[ruleFLOAT]() {
								goto l332
							}
							if buffer[position] != rune('h') {
								goto l332
							}
							position++
							{
								p.offset += p._float * HOUR
							}
							add(ruleOffHour, position333)
						}
						goto l322
					l332:
						position, tokenIndex = position322, tokenIndex322
						{
							position336 := position
							if !_rules[ruleFLOAT]() {
								goto l335
							}
							if buffer[position] != rune('m') {
								goto l335
							}
							position++
							{
								p.offset += p._float * MINUTE
							}
							add(ruleOffMinute, position336)
						}
						goto l322
					l335:
						position, tokenIndex = position322, tokenIndex322
						{
							position338 := position
							if !_rules[ruleFLOAT]() {
								goto l312
							}
							if buffer[position] != rune('s') {
								goto l312
							}
							position++
							{
								p.offset += p._float * SECOND
							}
							add(ruleOffSecond, position338)
						}
					}
				l322:
				l320:
					{
						position321, tokenIndex321 := position, tokenIndex
						{
							position340, tokenIndex340 := position, tokenIndex
							{
								position342 := position
								if !_rules[ruleFLOAT]() {
									goto l341
								}
								if buffer[position] != rune('y') {
									goto l341
								}
								position++
								{
									p.offset += p._float * YEAR
								}
								add(ruleOffYear, position342)
							}
							goto l340
						l341:
							position, tokenIndex = position340, tokenIndex340
							{
								position345 := position
								if !_rules[ruleFLOAT]() {
									goto l344
								}
								if buffer[position] != rune('w') {
									goto l344
								}
								position++
								{
									p.offset += p._float * WEEK
								}
								add(ruleOffWeek, position345)
							}
							goto l340
						l344:
							position, tokenIndex = position340, tokenIndex340
							{
								position348 := position
								if !_rules[ruleFLOAT]() {
									goto l347
								}
								if buffer[position] != rune('d') {
									goto l347
								}
								position++
								{
									p.offset += p._float * DAY
								}
								add(ruleOffDay, position348)
							}
							goto l340
						l347:
							position, tokenIndex = position340, tokenIndex340
							{
								position351 := position
								if !_rules[ruleFLOAT]() {
									goto l350
								}
								if buffer[position] != rune('h') {
									goto l350
								}
								position++
								{
									p.offset += p._float * HOUR
								}
								add(ruleOffHour, position351)
							}
							goto l340
						l350:
							position, tokenIndex = position340, tokenIndex340
							{
								position354 := position
								if !_rules[ruleFLOAT]() {
									goto l353
								}
								if buffer[position] != rune('m') {
									goto l353
								}
								position++
								{
									p.offset += p._float * MINUTE
								}
								add(ruleOffMinute, position354)
							}
							goto l340
						l353:
							position, tokenIndex = position340, tokenIndex340
							{
								position356 := position
								if !_rules[ruleFLOAT]() {
									goto l321
								}
								if buffer[position] != rune('s') {
									goto l321
								}
								position++
								{
									p.offset += p._float * SECOND
								}
								add(ruleOffSecond, position356)
							}
						}
					l340:
						goto l320
					l321:
						position, tokenIndex = position321, tokenIndex321
					}
					begin := position314
					end := position
					text = string(buffer[begin:end])
				}
				{
					p.offset *= p.offdir
				}
				add(ruleOffset, position313)
			}
			return true
		l312:
			position, tokenIndex = position312, tokenIndex312
			return false
		},
		/* 11 OffDir <- <(('+' Action63) / ('-' Action64))> */
		nil,
		/* 12 OffYear <- <(FLOAT 'y' Action65)> */
		nil,
		/* 13 OffWeek <- <(FLOAT 'w' Action66)> */
		nil,
		/* 14 OffDay <- <(FLOAT 'd' Action67)> */
		nil,
		/* 15 OffHour <- <(FLOAT 'h' Action68)> */
		nil,
		/* 16 OffMinute <- <(FLOAT 'm' Action69)> */
		nil,
		/* 17 OffSecond <- <(FLOAT 's' Action70)> */
		nil,
		/* 18 FLOAT <- <(<([0-9]+ ('.' [0-9]+)?)> Action71)> */
		func() bool {
			position366, tokenIndex366 := position, tokenIndex
			{
				position367 := position
				{
					position368 := position
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l366
					}
					position++
				l369:
					{
						position370, tokenIndex370 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l370
						}
						position++
						goto l369
					l370:
						position, tokenIndex = position370, tokenIndex370
					}
					{
						position371, tokenIndex371 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l371
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l371
						}
						position++
					l373:
						{
							position374, tokenIndex374 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l374
							}
							position++
							goto l373
						l374:
							position, tokenIndex = position374, tokenIndex374
						}
						goto l372
					l371:
						position, tokenIndex = position371, tokenIndex371
					}
				l372:
					begin := position368
					end := position
					text = string(buffer[begin:end])
				}
				{

					f, _ := strconv.ParseFloat(text, 64)
					p._float = f

				}
				add(ruleFLOAT, position367)
			}
			return true
		l366:
			position, tokenIndex = position366, tokenIndex366
			return false
		},
		/* 19 END <- <!.> */
		func() bool {
			position376, tokenIndex376 := position, tokenIndex
			{
				position377 := position
				{
					position378, tokenIndex378 := position, tokenIndex
					if !matchDot() {
						goto l378
					}
					goto l376
				l378:
					position, tokenIndex = position378, tokenIndex378
				}
				add(ruleEND, position377)
			}
			return true
		l376:
			position, tokenIndex = position376, tokenIndex376
			return false
		},
		/* 21 Action0 <- <{ p.start = *_deftime() }> */
		nil,
		/* 22 Action1 <- <{
		   p.start = *_deftime()
		   mon := MondayOf(&p.start)
		   p.start = mon.Add(time.Duration(p.wday) * time.Hour * 24)
		 }> */
		nil,
		/* 23 Action2 <- <{
		   t := _deftime()
		   m := time.Month(p.month)
		   p.start = time.Date(t.Year(),m,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 24 Action3 <- <{
		   t := *Today()
		   p.start = time.Date(t.Year(),t.Month(),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 25 Action4 <- <{
		   t := MondayOf(Today())
		   day := t.Day() + p.wday
		   p.start = time.Date(t.Year(),t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 26 Action5 <- <{
		   t := MondayOf(Today())
		   day := t.Day() + p.wday
		   p.start = time.Date(p.year,t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 27 Action6 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 28 Action7 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 29 Action8 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,t.Month(),t.Day(),p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 30 Action9 <- <{
		   t := _deftime()
		   day := MondayOf(t).Day() + p.wday
		   p.start = time.Date(p.year,t.Month(),day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 31 Action10 <- <{
		     t := _deftime()
		     p.start = time.Date(t.Year(),time.Month(p.month),p.day,0,0,0,0,t.Location())
		}> */
		nil,
		/* 32 Action11 <- <{
		   t := _deftime()
		   p.start = time.Date(t.Year(),time.Month(p.month),p.day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 33 Action12 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,1,1,0,0,0,0,t.Location())

		 }> */
		nil,
		/* 34 Action13 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 35 Action14 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),p.day,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 36 Action15 <- <{
		   t := _deftime()
		   p.start = time.Date(p.year,time.Month(p.month),p.day,p.hour,p.min,0,0,t.Location())
		 }> */
		nil,
		/* 37 Action16 <- <{ p.start = *_deftime() }> */
		nil,
		/* 38 Action17 <- <{
		   p.start = *Today()
		 }> */
		nil,
		/* 39 Action18 <- <{
		   p.start = *Today()
		   p.offset = DAY
		 }> */
		nil,
		/* 40 Action19 <- <{
		   p.start = *Tomorrow()
		 }> */
		nil,
		/* 41 Action20 <- <{
		   p.start = *Tomorrow()
		   p.offset = DAY
		 }> */
		nil,
		/* 42 Action21 <- <{
		   p.start = *Yesterday()
		 }> */
		nil,
		/* 43 Action22 <- <{
		   p.start = *Yesterday()
		   p.offset = DAY
		   p.offdir = -1
		 }> */
		nil,
		/* 44 Action23 <- <{
		   p.start = *_deftime()
		 }> */
		nil,
		/* 45 Action24 <- <{
		   p.start = *_deftime()
		   p.stop = p.start
		 }> */
		nil,
		/* 46 Action25 <- <{
		   p.start = *MinuteOf(_deftime())
		 }> */
		nil,
		/* 47 Action26 <- <{
		   p.start = *MinuteOf(_deftime())
		   p.offset = MINUTE
		 }> */
		nil,
		/* 48 Action27 <- <{
		   p.start = *HourOf(_deftime())
		 }> */
		nil,
		/* 49 Action28 <- <{
		   p.start = *HourOf(_deftime())
		   p.offset = HOUR
		 }> */
		nil,
		/* 50 Action29 <- <{
		   p.start = *WeekOf(_deftime())
		 }> */
		nil,
		/* 51 Action30 <- <{
		   p.start = *WeekOf(_deftime())
		   p.offset = WEEK
		 }> */
		nil,
		/* 52 Action31 <- <{
		   p.start = *MonthOf(_deftime())
		 }> */
		nil,
		/* 53 Action32 <- <{
		   t := _deftime()
		   p.start = *MonthOf(t)
		   nm := t.Month() + 1
		   p.stop = time.Date(t.Year(),nm,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 54 Action33 <- <{
		   p.start = *YearOf(_deftime())
		 }> */
		nil,
		/* 55 Action34 <- <{
		   t := _deftime()
		   p.start = *YearOf(t)
		   ny := t.Year() + 1
		   p.stop = time.Date(ny,1,1,0,0,0,0,t.Location())
		 }> */
		nil,
		/* 56 Action35 <- <{p.wday = 0}> */
		nil,
		/* 57 Action36 <- <{p.wday = 1}> */
		nil,
		/* 58 Action37 <- <{p.wday = 2}> */
		nil,
		/* 59 Action38 <- <{p.wday = 3}> */
		nil,
		/* 60 Action39 <- <{p.wday = 4}> */
		nil,
		/* 61 Action40 <- <{p.wday = 5}> */
		nil,
		/* 62 Action41 <- <{p.wday = 6}> */
		nil,
		/* 63 Action42 <- <{p.month = 1}> */
		nil,
		/* 64 Action43 <- <{p.month = 2}> */
		nil,
		/* 65 Action44 <- <{p.month = 3}> */
		nil,
		/* 66 Action45 <- <{p.month = 4}> */
		nil,
		/* 67 Action46 <- <{p.month = 5}> */
		nil,
		/* 68 Action47 <- <{p.month = 6}> */
		nil,
		/* 69 Action48 <- <{p.month = 7}> */
		nil,
		/* 70 Action49 <- <{p.month = 8}> */
		nil,
		/* 71 Action50 <- <{p.month = 9}> */
		nil,
		/* 72 Action51 <- <{p.month = 10}> */
		nil,
		/* 73 Action52 <- <{p.month = 11}> */
		nil,
		/* 74 Action53 <- <{p.month = 12}> */
		nil,
		nil,
		/* 76 Action54 <- <{
		   i, _ := strconv.Atoi(text)
		   p.day = i
		 }> */
		nil,
		/* 77 Action55 <- <{p.hour = 12}> */
		nil,
		/* 78 Action56 <- <{p.hour = 0}> */
		nil,
		/* 79 Action57 <- <{
		   i, _ := strconv.Atoi(text)
		   p.hour = i
		 }> */
		nil,
		/* 80 Action58 <- <{
		   i, _ := strconv.Atoi(text)
		   p.hour = i
		 }> */
		nil,
		/* 81 Action59 <- <{p.hour += 12}> */
		nil,
		/* 82 Action60 <- <{
		   i, _ := strconv.Atoi(text)
		   p.min = i
		 }> */
		nil,
		/* 83 Action61 <- <{
		   i, _ := strconv.Atoi(text)
		   p.year = i
		 }> */
		nil,
		/* 84 Action62 <- <{ p.offset *= p.offdir }> */
		nil,
		/* 85 Action63 <- <{p.offdir=1}> */
		nil,
		/* 86 Action64 <- <{p.offdir=-1}> */
		nil,
		/* 87 Action65 <- <{p.offset += p._float*YEAR}> */
		nil,
		/* 88 Action66 <- <{p.offset += p._float*WEEK}> */
		nil,
		/* 89 Action67 <- <{p.offset += p._float*DAY}> */
		nil,
		/* 90 Action68 <- <{p.offset += p._float*HOUR}> */
		nil,
		/* 91 Action69 <- <{p.offset += p._float*MINUTE}> */
		nil,
		/* 92 Action70 <- <{p.offset += p._float*SECOND}> */
		nil,
		/* 93 Action71 <- <{
		   f, _ := strconv.ParseFloat(text,64);
		   p._float = f
		}> */
		nil,
	}
	p.rules = _rules
	return nil
}
